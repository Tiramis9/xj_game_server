// Code generated by protoc-gen-go. DO NOT EDIT.
// source: msg/cmd.proto

package msg

type Hall_C_Msg struct {
	Token string `json:"token,omitempty"`
}

type GameInfo struct {
	GameID         int32       `json:"game_id,omitempty"`
	KindID         int32       `json:"kind_id,omitempty"`
	ServerAddr     string      `json:"server_addr,omitempty"`
	WsAddr         string      `json:"ws_addr,omitempty"`
	GameName       string      `json:"game_name,omitempty"`
	SortID         int32       `json:"sort_id,omitempty"`
	TableCount     int32       `json:"table_count,omitempty"`
	ChairCount     int32       `json:"chair_count,omitempty"`
	CellScore      float32     `json:"cell_score,omitempty"`
	RevenueRatio   float32     `json:"revenue_ratio,omitempty"`
	MinEnterScore  float32     `json:"minEnter_score,omitempty"`
	DeductionsType int32       `json:"deductions_type,omitempty"`
	GameVersion    int         `json:"game_version,omitempty"`
	GameStatus     int         `json:"game_status,omitempty"`
	RoomInfo       []*RoomInfo `json:"game_room,omitempty"`
}

type Announcement struct {
	NewsID        int32  `json:"news_id,omitempty"`
	Subject       string `json:"subject,omitempty"`
	Body          string `json:"body,omitempty"`
	FormattedBody string `json:"formatted_body,omitempty"`
	ClassID       int32  `json:"class_id,omitempty"`
}

//成功+心跳
type Hall_S_Msg struct {
	UserID           int32           `json:"user_id,omitempty"`
	NikeName         string          `json:"nike_name,omitempty"`
	MemberOrder      int32           `json:"member_order,omitempty"`
	PhoneNumber      string          `json:"phone_number,omitempty"`
	BinderCardNo     string          `json:"binder_card_no,omitempty"`
	FaceID           int32           `json:"face_id,omitempty"`
	RoleID           int32           `json:"role_id,omitempty"`
	SuitID           int32           `json:"suit_id,omitempty"`
	PhotoFrameID     int32           `json:"photo_frame_id,omitempty"`
	Gender           int32           `json:"gender,omitempty"`
	TimeStamp        int64           `json:"time_stamp,omitempty"`
	AnnouncementList []*Announcement `json:"announcement_list,omitempty"`
	GameInfoList     []*GameInfo     `json:"game_info_list,omitempty"`
	VersionInfos     []*VersionInfo  `json:"version_infos,omitempty"`
	UserGold         float32         `json:"user_gold,omitempty"`
	UserDiamonds     float32         `json:"user_diamonds,omitempty"`
}

// 版本信息 xjplatformdb.GameVersion
type VersionInfo struct {
	Version   int32  `json:"version,omitempty"`
	PokerName string `json:"poker_name,omitempty"`
}

//充值通知
type Hall_Recharge_Notice struct {
	UserGold     float32 `json:"user_gold,omitempty"`
	UserDiamonds float32 `json:"user_diamonds,omitempty"`
}

//失败
type Hall_S_Fail struct {
	ErrorCode int32  `json:"error_code,omitempty"`
	ErrorMsg  string `json:"error_msg,omitempty"`
}

//type GameInfo struct {
//	game_name string `json:"game_name"`
//	game_id int `json:"game_id"`
//	game_version int `json:"game_version"`
//	game_status int `json:"game_status"`
//
//}

type RoomInfo struct {
	RoomServer string  `json:"room_server"`
	RoomStatus int     `json:"room_status"`
	RoomID     int     `json:"room_id"`
	SortID     int     `json:"sort_id"`
	CellScore  float64 `json:"cell_score"`
	EnterScore float64 `json:"enter_score"`
	ScoreType  int     `json:"score_type"`
}
