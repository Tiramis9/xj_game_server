// Code generated by protoc-gen-go. DO NOT EDIT.
// source: msg/cmd.proto

package msg

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//登陆消息
type Game_C_TokenLogin struct {
	Token                string   `protobuf:"bytes,1,opt,name=Token,proto3" json:"Token,omitempty"`
	MachineID            string   `protobuf:"bytes,2,opt,name=MachineID,proto3" json:"MachineID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game_C_TokenLogin) Reset()         { *m = Game_C_TokenLogin{} }
func (m *Game_C_TokenLogin) String() string { return proto.CompactTextString(m) }
func (*Game_C_TokenLogin) ProtoMessage()    {}
func (*Game_C_TokenLogin) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{0}
}

func (m *Game_C_TokenLogin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_C_TokenLogin.Unmarshal(m, b)
}
func (m *Game_C_TokenLogin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_C_TokenLogin.Marshal(b, m, deterministic)
}
func (m *Game_C_TokenLogin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_C_TokenLogin.Merge(m, src)
}
func (m *Game_C_TokenLogin) XXX_Size() int {
	return xxx_messageInfo_Game_C_TokenLogin.Size(m)
}
func (m *Game_C_TokenLogin) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_C_TokenLogin.DiscardUnknown(m)
}

var xxx_messageInfo_Game_C_TokenLogin proto.InternalMessageInfo

func (m *Game_C_TokenLogin) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Game_C_TokenLogin) GetMachineID() string {
	if m != nil {
		return m.MachineID
	}
	return ""
}

//机器人登陆
type Game_C_RobotLogin struct {
	UserID               int32    `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	BatchID              int32    `protobuf:"varint,2,opt,name=BatchID,proto3" json:"BatchID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game_C_RobotLogin) Reset()         { *m = Game_C_RobotLogin{} }
func (m *Game_C_RobotLogin) String() string { return proto.CompactTextString(m) }
func (*Game_C_RobotLogin) ProtoMessage()    {}
func (*Game_C_RobotLogin) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{1}
}

func (m *Game_C_RobotLogin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_C_RobotLogin.Unmarshal(m, b)
}
func (m *Game_C_RobotLogin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_C_RobotLogin.Marshal(b, m, deterministic)
}
func (m *Game_C_RobotLogin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_C_RobotLogin.Merge(m, src)
}
func (m *Game_C_RobotLogin) XXX_Size() int {
	return xxx_messageInfo_Game_C_RobotLogin.Size(m)
}
func (m *Game_C_RobotLogin) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_C_RobotLogin.DiscardUnknown(m)
}

var xxx_messageInfo_Game_C_RobotLogin proto.InternalMessageInfo

func (m *Game_C_RobotLogin) GetUserID() int32 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *Game_C_RobotLogin) GetBatchID() int32 {
	if m != nil {
		return m.BatchID
	}
	return 0
}

//用户坐下
type Game_C_UserSitDown struct {
	TableID              int32    `protobuf:"varint,1,opt,name=TableID,proto3" json:"TableID,omitempty"`
	ChairID              int32    `protobuf:"varint,2,opt,name=ChairID,proto3" json:"ChairID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game_C_UserSitDown) Reset()         { *m = Game_C_UserSitDown{} }
func (m *Game_C_UserSitDown) String() string { return proto.CompactTextString(m) }
func (*Game_C_UserSitDown) ProtoMessage()    {}
func (*Game_C_UserSitDown) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{2}
}

func (m *Game_C_UserSitDown) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_C_UserSitDown.Unmarshal(m, b)
}
func (m *Game_C_UserSitDown) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_C_UserSitDown.Marshal(b, m, deterministic)
}
func (m *Game_C_UserSitDown) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_C_UserSitDown.Merge(m, src)
}
func (m *Game_C_UserSitDown) XXX_Size() int {
	return xxx_messageInfo_Game_C_UserSitDown.Size(m)
}
func (m *Game_C_UserSitDown) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_C_UserSitDown.DiscardUnknown(m)
}

var xxx_messageInfo_Game_C_UserSitDown proto.InternalMessageInfo

func (m *Game_C_UserSitDown) GetTableID() int32 {
	if m != nil {
		return m.TableID
	}
	return 0
}

func (m *Game_C_UserSitDown) GetChairID() int32 {
	if m != nil {
		return m.ChairID
	}
	return 0
}

//用户起立
type Game_C_UserStandUp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game_C_UserStandUp) Reset()         { *m = Game_C_UserStandUp{} }
func (m *Game_C_UserStandUp) String() string { return proto.CompactTextString(m) }
func (*Game_C_UserStandUp) ProtoMessage()    {}
func (*Game_C_UserStandUp) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{3}
}

func (m *Game_C_UserStandUp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_C_UserStandUp.Unmarshal(m, b)
}
func (m *Game_C_UserStandUp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_C_UserStandUp.Marshal(b, m, deterministic)
}
func (m *Game_C_UserStandUp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_C_UserStandUp.Merge(m, src)
}
func (m *Game_C_UserStandUp) XXX_Size() int {
	return xxx_messageInfo_Game_C_UserStandUp.Size(m)
}
func (m *Game_C_UserStandUp) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_C_UserStandUp.DiscardUnknown(m)
}

var xxx_messageInfo_Game_C_UserStandUp proto.InternalMessageInfo

//用户下注
type Game_C_UserJetton struct {
	JettonArea           int32    `protobuf:"varint,1,opt,name=JettonArea,proto3" json:"JettonArea,omitempty"`
	JettonScore          float32  `protobuf:"fixed32,2,opt,name=JettonScore,proto3" json:"JettonScore,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game_C_UserJetton) Reset()         { *m = Game_C_UserJetton{} }
func (m *Game_C_UserJetton) String() string { return proto.CompactTextString(m) }
func (*Game_C_UserJetton) ProtoMessage()    {}
func (*Game_C_UserJetton) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{4}
}

func (m *Game_C_UserJetton) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_C_UserJetton.Unmarshal(m, b)
}
func (m *Game_C_UserJetton) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_C_UserJetton.Marshal(b, m, deterministic)
}
func (m *Game_C_UserJetton) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_C_UserJetton.Merge(m, src)
}
func (m *Game_C_UserJetton) XXX_Size() int {
	return xxx_messageInfo_Game_C_UserJetton.Size(m)
}
func (m *Game_C_UserJetton) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_C_UserJetton.DiscardUnknown(m)
}

var xxx_messageInfo_Game_C_UserJetton proto.InternalMessageInfo

func (m *Game_C_UserJetton) GetJettonArea() int32 {
	if m != nil {
		return m.JettonArea
	}
	return 0
}

func (m *Game_C_UserJetton) GetJettonScore() float32 {
	if m != nil {
		return m.JettonScore
	}
	return 0
}

//获取用户列表 分页
type Game_C_UserList struct {
	Page                 int32    `protobuf:"varint,1,opt,name=Page,proto3" json:"Page,omitempty"`
	Size                 int32    `protobuf:"varint,2,opt,name=Size,proto3" json:"Size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game_C_UserList) Reset()         { *m = Game_C_UserList{} }
func (m *Game_C_UserList) String() string { return proto.CompactTextString(m) }
func (*Game_C_UserList) ProtoMessage()    {}
func (*Game_C_UserList) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{5}
}

func (m *Game_C_UserList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_C_UserList.Unmarshal(m, b)
}
func (m *Game_C_UserList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_C_UserList.Marshal(b, m, deterministic)
}
func (m *Game_C_UserList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_C_UserList.Merge(m, src)
}
func (m *Game_C_UserList) XXX_Size() int {
	return xxx_messageInfo_Game_C_UserList.Size(m)
}
func (m *Game_C_UserList) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_C_UserList.DiscardUnknown(m)
}

var xxx_messageInfo_Game_C_UserList proto.InternalMessageInfo

func (m *Game_C_UserList) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *Game_C_UserList) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

//请求失败
type Game_S_ReqlyFail struct {
	ErrorCode            int32    `protobuf:"varint,1,opt,name=ErrorCode,proto3" json:"ErrorCode,omitempty"`
	ErrorMsg             string   `protobuf:"bytes,2,opt,name=ErrorMsg,proto3" json:"ErrorMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game_S_ReqlyFail) Reset()         { *m = Game_S_ReqlyFail{} }
func (m *Game_S_ReqlyFail) String() string { return proto.CompactTextString(m) }
func (*Game_S_ReqlyFail) ProtoMessage()    {}
func (*Game_S_ReqlyFail) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{6}
}

func (m *Game_S_ReqlyFail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_S_ReqlyFail.Unmarshal(m, b)
}
func (m *Game_S_ReqlyFail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_S_ReqlyFail.Marshal(b, m, deterministic)
}
func (m *Game_S_ReqlyFail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_S_ReqlyFail.Merge(m, src)
}
func (m *Game_S_ReqlyFail) XXX_Size() int {
	return xxx_messageInfo_Game_S_ReqlyFail.Size(m)
}
func (m *Game_S_ReqlyFail) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_S_ReqlyFail.DiscardUnknown(m)
}

var xxx_messageInfo_Game_S_ReqlyFail proto.InternalMessageInfo

func (m *Game_S_ReqlyFail) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *Game_S_ReqlyFail) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

//登陆成功
type Game_S_LoginSuccess struct {
	Data                 []*Game_S_MsgHallHistory `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	Status               int32                    `protobuf:"varint,2,opt,name=Status,proto3" json:"Status,omitempty"`
	TableID              int32                    `protobuf:"varint,3,opt,name=TableID,proto3" json:"TableID,omitempty"`
	GameJettonTime       int32                    `protobuf:"varint,4,opt,name=GameJettonTime,proto3" json:"GameJettonTime,omitempty"`
	GameLotteryTime      int32                    `protobuf:"varint,5,opt,name=GameLotteryTime,proto3" json:"GameLotteryTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Game_S_LoginSuccess) Reset()         { *m = Game_S_LoginSuccess{} }
func (m *Game_S_LoginSuccess) String() string { return proto.CompactTextString(m) }
func (*Game_S_LoginSuccess) ProtoMessage()    {}
func (*Game_S_LoginSuccess) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{7}
}

func (m *Game_S_LoginSuccess) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_S_LoginSuccess.Unmarshal(m, b)
}
func (m *Game_S_LoginSuccess) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_S_LoginSuccess.Marshal(b, m, deterministic)
}
func (m *Game_S_LoginSuccess) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_S_LoginSuccess.Merge(m, src)
}
func (m *Game_S_LoginSuccess) XXX_Size() int {
	return xxx_messageInfo_Game_S_LoginSuccess.Size(m)
}
func (m *Game_S_LoginSuccess) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_S_LoginSuccess.DiscardUnknown(m)
}

var xxx_messageInfo_Game_S_LoginSuccess proto.InternalMessageInfo

func (m *Game_S_LoginSuccess) GetData() []*Game_S_MsgHallHistory {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Game_S_LoginSuccess) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Game_S_LoginSuccess) GetTableID() int32 {
	if m != nil {
		return m.TableID
	}
	return 0
}

func (m *Game_S_LoginSuccess) GetGameJettonTime() int32 {
	if m != nil {
		return m.GameJettonTime
	}
	return 0
}

func (m *Game_S_LoginSuccess) GetGameLotteryTime() int32 {
	if m != nil {
		return m.GameLotteryTime
	}
	return 0
}

//大厅场景
type Game_S_MsgHallHistory struct {
	TableID              int32                   `protobuf:"varint,1,opt,name=TableID,proto3" json:"TableID,omitempty"`
	GameJettonTime       int32                   `protobuf:"varint,2,opt,name=GameJettonTime,proto3" json:"GameJettonTime,omitempty"`
	GameLotteryTime      int32                   `protobuf:"varint,3,opt,name=GameLotteryTime,proto3" json:"GameLotteryTime,omitempty"`
	JettonList           []float32               `protobuf:"fixed32,4,rep,packed,name=JettonList,proto3" json:"JettonList,omitempty"`
	LotteryRecord        []*Game_S_LotteryRecord `protobuf:"bytes,5,rep,name=LotteryRecord,proto3" json:"LotteryRecord,omitempty"`
	GameStatus           int32                   `protobuf:"varint,6,opt,name=GameStatus,proto3" json:"GameStatus,omitempty"`
	SceneStartTime       int32                   `protobuf:"varint,7,opt,name=SceneStartTime,proto3" json:"SceneStartTime,omitempty"`
	UserCount            int32                   `protobuf:"varint,8,opt,name=UserCount,proto3" json:"UserCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Game_S_MsgHallHistory) Reset()         { *m = Game_S_MsgHallHistory{} }
func (m *Game_S_MsgHallHistory) String() string { return proto.CompactTextString(m) }
func (*Game_S_MsgHallHistory) ProtoMessage()    {}
func (*Game_S_MsgHallHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{8}
}

func (m *Game_S_MsgHallHistory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_S_MsgHallHistory.Unmarshal(m, b)
}
func (m *Game_S_MsgHallHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_S_MsgHallHistory.Marshal(b, m, deterministic)
}
func (m *Game_S_MsgHallHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_S_MsgHallHistory.Merge(m, src)
}
func (m *Game_S_MsgHallHistory) XXX_Size() int {
	return xxx_messageInfo_Game_S_MsgHallHistory.Size(m)
}
func (m *Game_S_MsgHallHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_S_MsgHallHistory.DiscardUnknown(m)
}

var xxx_messageInfo_Game_S_MsgHallHistory proto.InternalMessageInfo

func (m *Game_S_MsgHallHistory) GetTableID() int32 {
	if m != nil {
		return m.TableID
	}
	return 0
}

func (m *Game_S_MsgHallHistory) GetGameJettonTime() int32 {
	if m != nil {
		return m.GameJettonTime
	}
	return 0
}

func (m *Game_S_MsgHallHistory) GetGameLotteryTime() int32 {
	if m != nil {
		return m.GameLotteryTime
	}
	return 0
}

func (m *Game_S_MsgHallHistory) GetJettonList() []float32 {
	if m != nil {
		return m.JettonList
	}
	return nil
}

func (m *Game_S_MsgHallHistory) GetLotteryRecord() []*Game_S_LotteryRecord {
	if m != nil {
		return m.LotteryRecord
	}
	return nil
}

func (m *Game_S_MsgHallHistory) GetGameStatus() int32 {
	if m != nil {
		return m.GameStatus
	}
	return 0
}

func (m *Game_S_MsgHallHistory) GetSceneStartTime() int32 {
	if m != nil {
		return m.SceneStartTime
	}
	return 0
}

func (m *Game_S_MsgHallHistory) GetUserCount() int32 {
	if m != nil {
		return m.UserCount
	}
	return 0
}

type Game_S_LotteryRecord struct {
	LotteryRecord        []float32 `protobuf:"fixed32,1,rep,packed,name=LotteryRecord,proto3" json:"LotteryRecord,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Game_S_LotteryRecord) Reset()         { *m = Game_S_LotteryRecord{} }
func (m *Game_S_LotteryRecord) String() string { return proto.CompactTextString(m) }
func (*Game_S_LotteryRecord) ProtoMessage()    {}
func (*Game_S_LotteryRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{9}
}

func (m *Game_S_LotteryRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_S_LotteryRecord.Unmarshal(m, b)
}
func (m *Game_S_LotteryRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_S_LotteryRecord.Marshal(b, m, deterministic)
}
func (m *Game_S_LotteryRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_S_LotteryRecord.Merge(m, src)
}
func (m *Game_S_LotteryRecord) XXX_Size() int {
	return xxx_messageInfo_Game_S_LotteryRecord.Size(m)
}
func (m *Game_S_LotteryRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_S_LotteryRecord.DiscardUnknown(m)
}

var xxx_messageInfo_Game_S_LotteryRecord proto.InternalMessageInfo

func (m *Game_S_LotteryRecord) GetLotteryRecord() []float32 {
	if m != nil {
		return m.LotteryRecord
	}
	return nil
}

//开始游戏消息
type Game_S_GameStart struct {
	Data                 []*Game_S_User `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Game_S_GameStart) Reset()         { *m = Game_S_GameStart{} }
func (m *Game_S_GameStart) String() string { return proto.CompactTextString(m) }
func (*Game_S_GameStart) ProtoMessage()    {}
func (*Game_S_GameStart) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{10}
}

func (m *Game_S_GameStart) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_S_GameStart.Unmarshal(m, b)
}
func (m *Game_S_GameStart) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_S_GameStart.Marshal(b, m, deterministic)
}
func (m *Game_S_GameStart) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_S_GameStart.Merge(m, src)
}
func (m *Game_S_GameStart) XXX_Size() int {
	return xxx_messageInfo_Game_S_GameStart.Size(m)
}
func (m *Game_S_GameStart) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_S_GameStart.DiscardUnknown(m)
}

var xxx_messageInfo_Game_S_GameStart proto.InternalMessageInfo

func (m *Game_S_GameStart) GetData() []*Game_S_User {
	if m != nil {
		return m.Data
	}
	return nil
}

//user
type Game_S_User struct {
	UserID               int32    `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	NikeName             string   `protobuf:"bytes,2,opt,name=NikeName,proto3" json:"NikeName,omitempty"`
	UserGold             float32  `protobuf:"fixed32,3,opt,name=UserGold,proto3" json:"UserGold,omitempty"`
	UserDiamond          float32  `protobuf:"fixed32,4,opt,name=UserDiamond,proto3" json:"UserDiamond,omitempty"`
	MemberOrder          int32    `protobuf:"varint,5,opt,name=MemberOrder,proto3" json:"MemberOrder,omitempty"`
	HeadImageUrl         string   `protobuf:"bytes,6,opt,name=HeadImageUrl,proto3" json:"HeadImageUrl,omitempty"`
	FaceID               int32    `protobuf:"varint,7,opt,name=FaceID,proto3" json:"FaceID,omitempty"`
	RoleID               int32    `protobuf:"varint,8,opt,name=RoleID,proto3" json:"RoleID,omitempty"`
	SuitID               int32    `protobuf:"varint,9,opt,name=SuitID,proto3" json:"SuitID,omitempty"`
	PhotoFrameID         int32    `protobuf:"varint,10,opt,name=PhotoFrameID,proto3" json:"PhotoFrameID,omitempty"`
	TableID              int32    `protobuf:"varint,11,opt,name=TableID,proto3" json:"TableID,omitempty"`
	ChairID              int32    `protobuf:"varint,12,opt,name=ChairID,proto3" json:"ChairID,omitempty"`
	Status               int32    `protobuf:"varint,13,opt,name=Status,proto3" json:"Status,omitempty"`
	Gender               int32    `protobuf:"varint,14,opt,name=Gender,proto3" json:"Gender,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game_S_User) Reset()         { *m = Game_S_User{} }
func (m *Game_S_User) String() string { return proto.CompactTextString(m) }
func (*Game_S_User) ProtoMessage()    {}
func (*Game_S_User) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{11}
}

func (m *Game_S_User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_S_User.Unmarshal(m, b)
}
func (m *Game_S_User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_S_User.Marshal(b, m, deterministic)
}
func (m *Game_S_User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_S_User.Merge(m, src)
}
func (m *Game_S_User) XXX_Size() int {
	return xxx_messageInfo_Game_S_User.Size(m)
}
func (m *Game_S_User) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_S_User.DiscardUnknown(m)
}

var xxx_messageInfo_Game_S_User proto.InternalMessageInfo

func (m *Game_S_User) GetUserID() int32 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *Game_S_User) GetNikeName() string {
	if m != nil {
		return m.NikeName
	}
	return ""
}

func (m *Game_S_User) GetUserGold() float32 {
	if m != nil {
		return m.UserGold
	}
	return 0
}

func (m *Game_S_User) GetUserDiamond() float32 {
	if m != nil {
		return m.UserDiamond
	}
	return 0
}

func (m *Game_S_User) GetMemberOrder() int32 {
	if m != nil {
		return m.MemberOrder
	}
	return 0
}

func (m *Game_S_User) GetHeadImageUrl() string {
	if m != nil {
		return m.HeadImageUrl
	}
	return ""
}

func (m *Game_S_User) GetFaceID() int32 {
	if m != nil {
		return m.FaceID
	}
	return 0
}

func (m *Game_S_User) GetRoleID() int32 {
	if m != nil {
		return m.RoleID
	}
	return 0
}

func (m *Game_S_User) GetSuitID() int32 {
	if m != nil {
		return m.SuitID
	}
	return 0
}

func (m *Game_S_User) GetPhotoFrameID() int32 {
	if m != nil {
		return m.PhotoFrameID
	}
	return 0
}

func (m *Game_S_User) GetTableID() int32 {
	if m != nil {
		return m.TableID
	}
	return 0
}

func (m *Game_S_User) GetChairID() int32 {
	if m != nil {
		return m.ChairID
	}
	return 0
}

func (m *Game_S_User) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Game_S_User) GetGender() int32 {
	if m != nil {
		return m.Gender
	}
	return 0
}

//结束游戏消息
type Game_S_GameConclude struct {
	LotteryPoker         map[int32]*Game_S_LotteryPoker `protobuf:"bytes,1,rep,name=LotteryPoker,proto3" json:"LotteryPoker,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	WinArea              *Game_S_LotteryRecord          `protobuf:"bytes,2,opt,name=WinArea,proto3" json:"WinArea,omitempty"`
	UserListLoss         map[int32]float32              `protobuf:"bytes,3,rep,name=UserListLoss,proto3" json:"UserListLoss,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *Game_S_GameConclude) Reset()         { *m = Game_S_GameConclude{} }
func (m *Game_S_GameConclude) String() string { return proto.CompactTextString(m) }
func (*Game_S_GameConclude) ProtoMessage()    {}
func (*Game_S_GameConclude) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{12}
}

func (m *Game_S_GameConclude) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_S_GameConclude.Unmarshal(m, b)
}
func (m *Game_S_GameConclude) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_S_GameConclude.Marshal(b, m, deterministic)
}
func (m *Game_S_GameConclude) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_S_GameConclude.Merge(m, src)
}
func (m *Game_S_GameConclude) XXX_Size() int {
	return xxx_messageInfo_Game_S_GameConclude.Size(m)
}
func (m *Game_S_GameConclude) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_S_GameConclude.DiscardUnknown(m)
}

var xxx_messageInfo_Game_S_GameConclude proto.InternalMessageInfo

func (m *Game_S_GameConclude) GetLotteryPoker() map[int32]*Game_S_LotteryPoker {
	if m != nil {
		return m.LotteryPoker
	}
	return nil
}

func (m *Game_S_GameConclude) GetWinArea() *Game_S_LotteryRecord {
	if m != nil {
		return m.WinArea
	}
	return nil
}

func (m *Game_S_GameConclude) GetUserListLoss() map[int32]float32 {
	if m != nil {
		return m.UserListLoss
	}
	return nil
}

type Game_S_LotteryPoker struct {
	PokerType            int32    `protobuf:"varint,1,opt,name=PokerType,proto3" json:"PokerType,omitempty"`
	LotteryPoker         []int32  `protobuf:"varint,2,rep,packed,name=LotteryPoker,proto3" json:"LotteryPoker,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game_S_LotteryPoker) Reset()         { *m = Game_S_LotteryPoker{} }
func (m *Game_S_LotteryPoker) String() string { return proto.CompactTextString(m) }
func (*Game_S_LotteryPoker) ProtoMessage()    {}
func (*Game_S_LotteryPoker) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{13}
}

func (m *Game_S_LotteryPoker) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_S_LotteryPoker.Unmarshal(m, b)
}
func (m *Game_S_LotteryPoker) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_S_LotteryPoker.Marshal(b, m, deterministic)
}
func (m *Game_S_LotteryPoker) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_S_LotteryPoker.Merge(m, src)
}
func (m *Game_S_LotteryPoker) XXX_Size() int {
	return xxx_messageInfo_Game_S_LotteryPoker.Size(m)
}
func (m *Game_S_LotteryPoker) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_S_LotteryPoker.DiscardUnknown(m)
}

var xxx_messageInfo_Game_S_LotteryPoker proto.InternalMessageInfo

func (m *Game_S_LotteryPoker) GetPokerType() int32 {
	if m != nil {
		return m.PokerType
	}
	return 0
}

func (m *Game_S_LotteryPoker) GetLotteryPoker() []int32 {
	if m != nil {
		return m.LotteryPoker
	}
	return nil
}

//下注场景消息
type Game_S_JettonScene struct {
	SceneStartTime       int32                   `protobuf:"varint,1,opt,name=SceneStartTime,proto3" json:"SceneStartTime,omitempty"`
	UserChairID          int32                   `protobuf:"varint,2,opt,name=UserChairID,proto3" json:"UserChairID,omitempty"`
	UserList             []*Game_S_User          `protobuf:"bytes,3,rep,name=UserList,proto3" json:"UserList,omitempty"`
	LotteryRecord        []*Game_S_LotteryRecord `protobuf:"bytes,4,rep,name=LotteryRecord,proto3" json:"LotteryRecord,omitempty"`
	UserArraJetton       []*Game_C_AreaJetton    `protobuf:"bytes,5,rep,name=UserArraJetton,proto3" json:"UserArraJetton,omitempty"`
	UserJetton           []*Game_C_AreaJetton    `protobuf:"bytes,6,rep,name=UserJetton,proto3" json:"UserJetton,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Game_S_JettonScene) Reset()         { *m = Game_S_JettonScene{} }
func (m *Game_S_JettonScene) String() string { return proto.CompactTextString(m) }
func (*Game_S_JettonScene) ProtoMessage()    {}
func (*Game_S_JettonScene) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{14}
}

func (m *Game_S_JettonScene) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_S_JettonScene.Unmarshal(m, b)
}
func (m *Game_S_JettonScene) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_S_JettonScene.Marshal(b, m, deterministic)
}
func (m *Game_S_JettonScene) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_S_JettonScene.Merge(m, src)
}
func (m *Game_S_JettonScene) XXX_Size() int {
	return xxx_messageInfo_Game_S_JettonScene.Size(m)
}
func (m *Game_S_JettonScene) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_S_JettonScene.DiscardUnknown(m)
}

var xxx_messageInfo_Game_S_JettonScene proto.InternalMessageInfo

func (m *Game_S_JettonScene) GetSceneStartTime() int32 {
	if m != nil {
		return m.SceneStartTime
	}
	return 0
}

func (m *Game_S_JettonScene) GetUserChairID() int32 {
	if m != nil {
		return m.UserChairID
	}
	return 0
}

func (m *Game_S_JettonScene) GetUserList() []*Game_S_User {
	if m != nil {
		return m.UserList
	}
	return nil
}

func (m *Game_S_JettonScene) GetLotteryRecord() []*Game_S_LotteryRecord {
	if m != nil {
		return m.LotteryRecord
	}
	return nil
}

func (m *Game_S_JettonScene) GetUserArraJetton() []*Game_C_AreaJetton {
	if m != nil {
		return m.UserArraJetton
	}
	return nil
}

func (m *Game_S_JettonScene) GetUserJetton() []*Game_C_AreaJetton {
	if m != nil {
		return m.UserJetton
	}
	return nil
}

// 下注结构体
type Game_C_AreaJetton struct {
	Area                 int32    `protobuf:"varint,1,opt,name=Area,proto3" json:"Area,omitempty"`
	Jetton               float32  `protobuf:"fixed32,2,opt,name=Jetton,proto3" json:"Jetton,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game_C_AreaJetton) Reset()         { *m = Game_C_AreaJetton{} }
func (m *Game_C_AreaJetton) String() string { return proto.CompactTextString(m) }
func (*Game_C_AreaJetton) ProtoMessage()    {}
func (*Game_C_AreaJetton) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{15}
}

func (m *Game_C_AreaJetton) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_C_AreaJetton.Unmarshal(m, b)
}
func (m *Game_C_AreaJetton) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_C_AreaJetton.Marshal(b, m, deterministic)
}
func (m *Game_C_AreaJetton) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_C_AreaJetton.Merge(m, src)
}
func (m *Game_C_AreaJetton) XXX_Size() int {
	return xxx_messageInfo_Game_C_AreaJetton.Size(m)
}
func (m *Game_C_AreaJetton) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_C_AreaJetton.DiscardUnknown(m)
}

var xxx_messageInfo_Game_C_AreaJetton proto.InternalMessageInfo

func (m *Game_C_AreaJetton) GetArea() int32 {
	if m != nil {
		return m.Area
	}
	return 0
}

func (m *Game_C_AreaJetton) GetJetton() float32 {
	if m != nil {
		return m.Jetton
	}
	return 0
}

//游戏结束大厅场景消息
type Game_S_Hall struct {
	TableID              int32                 `protobuf:"varint,1,opt,name=TableID,proto3" json:"TableID,omitempty"`
	LotteryRecord        *Game_S_LotteryRecord `protobuf:"bytes,2,opt,name=LotteryRecord,proto3" json:"LotteryRecord,omitempty"`
	UserCount            int32                 `protobuf:"varint,3,opt,name=UserCount,proto3" json:"UserCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Game_S_Hall) Reset()         { *m = Game_S_Hall{} }
func (m *Game_S_Hall) String() string { return proto.CompactTextString(m) }
func (*Game_S_Hall) ProtoMessage()    {}
func (*Game_S_Hall) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{16}
}

func (m *Game_S_Hall) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_S_Hall.Unmarshal(m, b)
}
func (m *Game_S_Hall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_S_Hall.Marshal(b, m, deterministic)
}
func (m *Game_S_Hall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_S_Hall.Merge(m, src)
}
func (m *Game_S_Hall) XXX_Size() int {
	return xxx_messageInfo_Game_S_Hall.Size(m)
}
func (m *Game_S_Hall) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_S_Hall.DiscardUnknown(m)
}

var xxx_messageInfo_Game_S_Hall proto.InternalMessageInfo

func (m *Game_S_Hall) GetTableID() int32 {
	if m != nil {
		return m.TableID
	}
	return 0
}

func (m *Game_S_Hall) GetLotteryRecord() *Game_S_LotteryRecord {
	if m != nil {
		return m.LotteryRecord
	}
	return nil
}

func (m *Game_S_Hall) GetUserCount() int32 {
	if m != nil {
		return m.UserCount
	}
	return 0
}

//当前下注状况,每个区域,每个玩家的下注情况
type Game_S_AreaJetton struct {
	TableID              int32                `protobuf:"varint,1,opt,name=TableID,proto3" json:"TableID,omitempty"`
	UserArraJetton       []*Game_C_AreaJetton `protobuf:"bytes,2,rep,name=UserArraJetton,proto3" json:"UserArraJetton,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Game_S_AreaJetton) Reset()         { *m = Game_S_AreaJetton{} }
func (m *Game_S_AreaJetton) String() string { return proto.CompactTextString(m) }
func (*Game_S_AreaJetton) ProtoMessage()    {}
func (*Game_S_AreaJetton) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{17}
}

func (m *Game_S_AreaJetton) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_S_AreaJetton.Unmarshal(m, b)
}
func (m *Game_S_AreaJetton) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_S_AreaJetton.Marshal(b, m, deterministic)
}
func (m *Game_S_AreaJetton) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_S_AreaJetton.Merge(m, src)
}
func (m *Game_S_AreaJetton) XXX_Size() int {
	return xxx_messageInfo_Game_S_AreaJetton.Size(m)
}
func (m *Game_S_AreaJetton) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_S_AreaJetton.DiscardUnknown(m)
}

var xxx_messageInfo_Game_S_AreaJetton proto.InternalMessageInfo

func (m *Game_S_AreaJetton) GetTableID() int32 {
	if m != nil {
		return m.TableID
	}
	return 0
}

func (m *Game_S_AreaJetton) GetUserArraJetton() []*Game_C_AreaJetton {
	if m != nil {
		return m.UserArraJetton
	}
	return nil
}

//开奖场景消息
type Game_S_LotteryScene struct {
	SceneStartTime       int32                          `protobuf:"varint,1,opt,name=SceneStartTime,proto3" json:"SceneStartTime,omitempty"`
	UserChairID          int32                          `protobuf:"varint,2,opt,name=UserChairID,proto3" json:"UserChairID,omitempty"`
	UserList             []*Game_S_User                 `protobuf:"bytes,3,rep,name=UserList,proto3" json:"UserList,omitempty"`
	LotteryRecord        []*Game_S_LotteryRecord        `protobuf:"bytes,4,rep,name=LotteryRecord,proto3" json:"LotteryRecord,omitempty"`
	UserArraJetton       []*Game_C_AreaJetton           `protobuf:"bytes,5,rep,name=UserArraJetton,proto3" json:"UserArraJetton,omitempty"`
	LotteryPoker         map[int32]*Game_S_LotteryPoker `protobuf:"bytes,6,rep,name=LotteryPoker,proto3" json:"LotteryPoker,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	WinArea              *Game_S_LotteryRecord          `protobuf:"bytes,7,opt,name=WinArea,proto3" json:"WinArea,omitempty"`
	UserJetton           []*Game_C_AreaJetton           `protobuf:"bytes,8,rep,name=UserJetton,proto3" json:"UserJetton,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *Game_S_LotteryScene) Reset()         { *m = Game_S_LotteryScene{} }
func (m *Game_S_LotteryScene) String() string { return proto.CompactTextString(m) }
func (*Game_S_LotteryScene) ProtoMessage()    {}
func (*Game_S_LotteryScene) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{18}
}

func (m *Game_S_LotteryScene) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_S_LotteryScene.Unmarshal(m, b)
}
func (m *Game_S_LotteryScene) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_S_LotteryScene.Marshal(b, m, deterministic)
}
func (m *Game_S_LotteryScene) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_S_LotteryScene.Merge(m, src)
}
func (m *Game_S_LotteryScene) XXX_Size() int {
	return xxx_messageInfo_Game_S_LotteryScene.Size(m)
}
func (m *Game_S_LotteryScene) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_S_LotteryScene.DiscardUnknown(m)
}

var xxx_messageInfo_Game_S_LotteryScene proto.InternalMessageInfo

func (m *Game_S_LotteryScene) GetSceneStartTime() int32 {
	if m != nil {
		return m.SceneStartTime
	}
	return 0
}

func (m *Game_S_LotteryScene) GetUserChairID() int32 {
	if m != nil {
		return m.UserChairID
	}
	return 0
}

func (m *Game_S_LotteryScene) GetUserList() []*Game_S_User {
	if m != nil {
		return m.UserList
	}
	return nil
}

func (m *Game_S_LotteryScene) GetLotteryRecord() []*Game_S_LotteryRecord {
	if m != nil {
		return m.LotteryRecord
	}
	return nil
}

func (m *Game_S_LotteryScene) GetUserArraJetton() []*Game_C_AreaJetton {
	if m != nil {
		return m.UserArraJetton
	}
	return nil
}

func (m *Game_S_LotteryScene) GetLotteryPoker() map[int32]*Game_S_LotteryPoker {
	if m != nil {
		return m.LotteryPoker
	}
	return nil
}

func (m *Game_S_LotteryScene) GetWinArea() *Game_S_LotteryRecord {
	if m != nil {
		return m.WinArea
	}
	return nil
}

func (m *Game_S_LotteryScene) GetUserJetton() []*Game_C_AreaJetton {
	if m != nil {
		return m.UserJetton
	}
	return nil
}

//坐下通知消息
type Game_S_SitDownNotify struct {
	UserChairID          int32        `protobuf:"varint,1,opt,name=UserChairID,proto3" json:"UserChairID,omitempty"`
	User                 *Game_S_User `protobuf:"bytes,2,opt,name=User,proto3" json:"User,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Game_S_SitDownNotify) Reset()         { *m = Game_S_SitDownNotify{} }
func (m *Game_S_SitDownNotify) String() string { return proto.CompactTextString(m) }
func (*Game_S_SitDownNotify) ProtoMessage()    {}
func (*Game_S_SitDownNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{19}
}

func (m *Game_S_SitDownNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_S_SitDownNotify.Unmarshal(m, b)
}
func (m *Game_S_SitDownNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_S_SitDownNotify.Marshal(b, m, deterministic)
}
func (m *Game_S_SitDownNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_S_SitDownNotify.Merge(m, src)
}
func (m *Game_S_SitDownNotify) XXX_Size() int {
	return xxx_messageInfo_Game_S_SitDownNotify.Size(m)
}
func (m *Game_S_SitDownNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_S_SitDownNotify.DiscardUnknown(m)
}

var xxx_messageInfo_Game_S_SitDownNotify proto.InternalMessageInfo

func (m *Game_S_SitDownNotify) GetUserChairID() int32 {
	if m != nil {
		return m.UserChairID
	}
	return 0
}

func (m *Game_S_SitDownNotify) GetUser() *Game_S_User {
	if m != nil {
		return m.User
	}
	return nil
}

//起立通知消息
type Game_S_StandUpNotify struct {
	ChairID              int32    `protobuf:"varint,1,opt,name=ChairID,proto3" json:"ChairID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game_S_StandUpNotify) Reset()         { *m = Game_S_StandUpNotify{} }
func (m *Game_S_StandUpNotify) String() string { return proto.CompactTextString(m) }
func (*Game_S_StandUpNotify) ProtoMessage()    {}
func (*Game_S_StandUpNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{20}
}

func (m *Game_S_StandUpNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_S_StandUpNotify.Unmarshal(m, b)
}
func (m *Game_S_StandUpNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_S_StandUpNotify.Marshal(b, m, deterministic)
}
func (m *Game_S_StandUpNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_S_StandUpNotify.Merge(m, src)
}
func (m *Game_S_StandUpNotify) XXX_Size() int {
	return xxx_messageInfo_Game_S_StandUpNotify.Size(m)
}
func (m *Game_S_StandUpNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_S_StandUpNotify.DiscardUnknown(m)
}

var xxx_messageInfo_Game_S_StandUpNotify proto.InternalMessageInfo

func (m *Game_S_StandUpNotify) GetChairID() int32 {
	if m != nil {
		return m.ChairID
	}
	return 0
}

//掉线通知消息
type Game_S_OffLineNotify struct {
	ChairID              int32    `protobuf:"varint,1,opt,name=ChairID,proto3" json:"ChairID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game_S_OffLineNotify) Reset()         { *m = Game_S_OffLineNotify{} }
func (m *Game_S_OffLineNotify) String() string { return proto.CompactTextString(m) }
func (*Game_S_OffLineNotify) ProtoMessage()    {}
func (*Game_S_OffLineNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{21}
}

func (m *Game_S_OffLineNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_S_OffLineNotify.Unmarshal(m, b)
}
func (m *Game_S_OffLineNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_S_OffLineNotify.Marshal(b, m, deterministic)
}
func (m *Game_S_OffLineNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_S_OffLineNotify.Merge(m, src)
}
func (m *Game_S_OffLineNotify) XXX_Size() int {
	return xxx_messageInfo_Game_S_OffLineNotify.Size(m)
}
func (m *Game_S_OffLineNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_S_OffLineNotify.DiscardUnknown(m)
}

var xxx_messageInfo_Game_S_OffLineNotify proto.InternalMessageInfo

func (m *Game_S_OffLineNotify) GetChairID() int32 {
	if m != nil {
		return m.ChairID
	}
	return 0
}

//上线通知消息
type Game_S_OnLineNotify struct {
	ChairID              int32    `protobuf:"varint,1,opt,name=ChairID,proto3" json:"ChairID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game_S_OnLineNotify) Reset()         { *m = Game_S_OnLineNotify{} }
func (m *Game_S_OnLineNotify) String() string { return proto.CompactTextString(m) }
func (*Game_S_OnLineNotify) ProtoMessage()    {}
func (*Game_S_OnLineNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{22}
}

func (m *Game_S_OnLineNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_S_OnLineNotify.Unmarshal(m, b)
}
func (m *Game_S_OnLineNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_S_OnLineNotify.Marshal(b, m, deterministic)
}
func (m *Game_S_OnLineNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_S_OnLineNotify.Merge(m, src)
}
func (m *Game_S_OnLineNotify) XXX_Size() int {
	return xxx_messageInfo_Game_S_OnLineNotify.Size(m)
}
func (m *Game_S_OnLineNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_S_OnLineNotify.DiscardUnknown(m)
}

var xxx_messageInfo_Game_S_OnLineNotify proto.InternalMessageInfo

func (m *Game_S_OnLineNotify) GetChairID() int32 {
	if m != nil {
		return m.ChairID
	}
	return 0
}

// 下注通知
type Game_S_UserJetton struct {
	ChairID              int32    `protobuf:"varint,1,opt,name=ChairID,proto3" json:"ChairID,omitempty"`
	JettonArea           int32    `protobuf:"varint,2,opt,name=JettonArea,proto3" json:"JettonArea,omitempty"`
	JettonScore          float32  `protobuf:"fixed32,3,opt,name=JettonScore,proto3" json:"JettonScore,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game_S_UserJetton) Reset()         { *m = Game_S_UserJetton{} }
func (m *Game_S_UserJetton) String() string { return proto.CompactTextString(m) }
func (*Game_S_UserJetton) ProtoMessage()    {}
func (*Game_S_UserJetton) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{23}
}

func (m *Game_S_UserJetton) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_S_UserJetton.Unmarshal(m, b)
}
func (m *Game_S_UserJetton) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_S_UserJetton.Marshal(b, m, deterministic)
}
func (m *Game_S_UserJetton) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_S_UserJetton.Merge(m, src)
}
func (m *Game_S_UserJetton) XXX_Size() int {
	return xxx_messageInfo_Game_S_UserJetton.Size(m)
}
func (m *Game_S_UserJetton) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_S_UserJetton.DiscardUnknown(m)
}

var xxx_messageInfo_Game_S_UserJetton proto.InternalMessageInfo

func (m *Game_S_UserJetton) GetChairID() int32 {
	if m != nil {
		return m.ChairID
	}
	return 0
}

func (m *Game_S_UserJetton) GetJettonArea() int32 {
	if m != nil {
		return m.JettonArea
	}
	return 0
}

func (m *Game_S_UserJetton) GetJettonScore() float32 {
	if m != nil {
		return m.JettonScore
	}
	return 0
}

// 返回用户列表数据
type Game_S_UserList struct {
	Data                 []*Game_S_TempUser `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Game_S_UserList) Reset()         { *m = Game_S_UserList{} }
func (m *Game_S_UserList) String() string { return proto.CompactTextString(m) }
func (*Game_S_UserList) ProtoMessage()    {}
func (*Game_S_UserList) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{24}
}

func (m *Game_S_UserList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_S_UserList.Unmarshal(m, b)
}
func (m *Game_S_UserList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_S_UserList.Marshal(b, m, deterministic)
}
func (m *Game_S_UserList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_S_UserList.Merge(m, src)
}
func (m *Game_S_UserList) XXX_Size() int {
	return xxx_messageInfo_Game_S_UserList.Size(m)
}
func (m *Game_S_UserList) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_S_UserList.DiscardUnknown(m)
}

var xxx_messageInfo_Game_S_UserList proto.InternalMessageInfo

func (m *Game_S_UserList) GetData() []*Game_S_TempUser {
	if m != nil {
		return m.Data
	}
	return nil
}

type Game_S_TempUser struct {
	User                 *Game_S_User `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	TotalJetton          float32      `protobuf:"fixed32,2,opt,name=TotalJetton,proto3" json:"TotalJetton,omitempty"`
	TotalWin             int32        `protobuf:"varint,3,opt,name=TotalWin,proto3" json:"TotalWin,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Game_S_TempUser) Reset()         { *m = Game_S_TempUser{} }
func (m *Game_S_TempUser) String() string { return proto.CompactTextString(m) }
func (*Game_S_TempUser) ProtoMessage()    {}
func (*Game_S_TempUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{25}
}

func (m *Game_S_TempUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_S_TempUser.Unmarshal(m, b)
}
func (m *Game_S_TempUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_S_TempUser.Marshal(b, m, deterministic)
}
func (m *Game_S_TempUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_S_TempUser.Merge(m, src)
}
func (m *Game_S_TempUser) XXX_Size() int {
	return xxx_messageInfo_Game_S_TempUser.Size(m)
}
func (m *Game_S_TempUser) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_S_TempUser.DiscardUnknown(m)
}

var xxx_messageInfo_Game_S_TempUser proto.InternalMessageInfo

func (m *Game_S_TempUser) GetUser() *Game_S_User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *Game_S_TempUser) GetTotalJetton() float32 {
	if m != nil {
		return m.TotalJetton
	}
	return 0
}

func (m *Game_S_TempUser) GetTotalWin() int32 {
	if m != nil {
		return m.TotalWin
	}
	return 0
}

func init() {
	proto.RegisterType((*Game_C_TokenLogin)(nil), "msg.Game_C_TokenLogin")
	proto.RegisterType((*Game_C_RobotLogin)(nil), "msg.Game_C_RobotLogin")
	proto.RegisterType((*Game_C_UserSitDown)(nil), "msg.Game_C_UserSitDown")
	proto.RegisterType((*Game_C_UserStandUp)(nil), "msg.Game_C_UserStandUp")
	proto.RegisterType((*Game_C_UserJetton)(nil), "msg.Game_C_UserJetton")
	proto.RegisterType((*Game_C_UserList)(nil), "msg.Game_C_UserList")
	proto.RegisterType((*Game_S_ReqlyFail)(nil), "msg.Game_S_ReqlyFail")
	proto.RegisterType((*Game_S_LoginSuccess)(nil), "msg.Game_S_LoginSuccess")
	proto.RegisterType((*Game_S_MsgHallHistory)(nil), "msg.Game_S_MsgHallHistory")
	proto.RegisterType((*Game_S_LotteryRecord)(nil), "msg.Game_S_LotteryRecord")
	proto.RegisterType((*Game_S_GameStart)(nil), "msg.Game_S_GameStart")
	proto.RegisterType((*Game_S_User)(nil), "msg.Game_S_User")
	proto.RegisterType((*Game_S_GameConclude)(nil), "msg.Game_S_GameConclude")
	proto.RegisterMapType((map[int32]*Game_S_LotteryPoker)(nil), "msg.Game_S_GameConclude.LotteryPokerEntry")
	proto.RegisterMapType((map[int32]float32)(nil), "msg.Game_S_GameConclude.UserListLossEntry")
	proto.RegisterType((*Game_S_LotteryPoker)(nil), "msg.Game_S_LotteryPoker")
	proto.RegisterType((*Game_S_JettonScene)(nil), "msg.Game_S_JettonScene")
	proto.RegisterType((*Game_C_AreaJetton)(nil), "msg.Game_C_AreaJetton")
	proto.RegisterType((*Game_S_Hall)(nil), "msg.Game_S_Hall")
	proto.RegisterType((*Game_S_AreaJetton)(nil), "msg.Game_S_AreaJetton")
	proto.RegisterType((*Game_S_LotteryScene)(nil), "msg.Game_S_LotteryScene")
	proto.RegisterMapType((map[int32]*Game_S_LotteryPoker)(nil), "msg.Game_S_LotteryScene.LotteryPokerEntry")
	proto.RegisterType((*Game_S_SitDownNotify)(nil), "msg.Game_S_SitDownNotify")
	proto.RegisterType((*Game_S_StandUpNotify)(nil), "msg.Game_S_StandUpNotify")
	proto.RegisterType((*Game_S_OffLineNotify)(nil), "msg.Game_S_OffLineNotify")
	proto.RegisterType((*Game_S_OnLineNotify)(nil), "msg.Game_S_OnLineNotify")
	proto.RegisterType((*Game_S_UserJetton)(nil), "msg.Game_S_UserJetton")
	proto.RegisterType((*Game_S_UserList)(nil), "msg.Game_S_UserList")
	proto.RegisterType((*Game_S_TempUser)(nil), "msg.Game_S_TempUser")
}

func init() { proto.RegisterFile("msg/cmd.proto", fileDescriptor_a090769f8e2c12a2) }

var fileDescriptor_a090769f8e2c12a2 = []byte{
	// 1126 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe4, 0x57, 0xdd, 0x6e, 0x2b, 0x35,
	0x10, 0x56, 0x76, 0x93, 0xb4, 0x71, 0x7f, 0x68, 0x4d, 0xa9, 0x96, 0xea, 0x08, 0x55, 0x56, 0x85,
	0x2a, 0x84, 0x72, 0x10, 0x47, 0x42, 0x87, 0x1f, 0x51, 0x1d, 0x92, 0xfe, 0xa1, 0xf4, 0x47, 0x9b,
	0x54, 0x15, 0x37, 0x54, 0xee, 0xc6, 0x4d, 0x57, 0xdd, 0x5d, 0x17, 0xaf, 0x03, 0x0a, 0x0f, 0x70,
	0xde, 0x80, 0x57, 0xe0, 0x4d, 0xb8, 0x80, 0xa7, 0x42, 0x63, 0x3b, 0x5e, 0xef, 0x26, 0xfd, 0xbb,
	0xe0, 0x8a, 0x9b, 0xc4, 0xf3, 0xed, 0x78, 0x3c, 0x9e, 0xf9, 0x66, 0x6c, 0xa3, 0x95, 0x34, 0x1f,
	0xbd, 0x8e, 0xd2, 0x61, 0xfb, 0x5e, 0x70, 0xc9, 0xb1, 0x9f, 0xe6, 0x23, 0x72, 0x88, 0xd6, 0x0f,
	0x69, 0xca, 0xae, 0x3a, 0x57, 0x03, 0x7e, 0xc7, 0xb2, 0x1e, 0x1f, 0xc5, 0x19, 0xde, 0x40, 0x0d,
	0x25, 0x05, 0xb5, 0xed, 0xda, 0x6e, 0x2b, 0xd4, 0x02, 0x7e, 0x85, 0x5a, 0x27, 0x34, 0xba, 0x8d,
	0x33, 0x76, 0xdc, 0x0d, 0x3c, 0xf5, 0xa5, 0x00, 0xc8, 0xbe, 0x35, 0x14, 0xf2, 0x6b, 0x2e, 0xb5,
	0xa1, 0x4d, 0xd4, 0xbc, 0xc8, 0x99, 0x38, 0xee, 0x2a, 0x4b, 0x8d, 0xd0, 0x48, 0x38, 0x40, 0x0b,
	0x3f, 0x50, 0x19, 0xdd, 0x1a, 0x43, 0x8d, 0x70, 0x2a, 0x92, 0x23, 0x84, 0x8d, 0x19, 0x50, 0xed,
	0xc7, 0xb2, 0xcb, 0x7f, 0xcb, 0x40, 0x7f, 0x40, 0xaf, 0x13, 0x66, 0x0d, 0x4d, 0x45, 0xf8, 0xd2,
	0xb9, 0xa5, 0xb1, 0x28, 0x2c, 0x19, 0x91, 0x6c, 0x94, 0x2d, 0x49, 0x9a, 0x0d, 0x2f, 0xee, 0xc9,
	0x85, 0x75, 0x13, 0xd0, 0x1f, 0x99, 0x94, 0x3c, 0xc3, 0x9f, 0x20, 0xa4, 0x47, 0xef, 0x04, 0xa3,
	0x66, 0x05, 0x07, 0xc1, 0xdb, 0x68, 0x49, 0x4b, 0xfd, 0x88, 0x0b, 0xa6, 0x16, 0xf2, 0x42, 0x17,
	0x22, 0x5f, 0xa3, 0x0f, 0x1c, 0xb3, 0xbd, 0x38, 0x97, 0x18, 0xa3, 0xfa, 0x39, 0x1d, 0x31, 0x63,
	0x4e, 0x8d, 0x01, 0xeb, 0xc7, 0xbf, 0x33, 0xe3, 0xaa, 0x1a, 0x93, 0x1e, 0x5a, 0x53, 0x53, 0xfb,
	0x57, 0x21, 0xfb, 0x25, 0x99, 0x1c, 0xd0, 0x38, 0x81, 0x50, 0xef, 0x0b, 0xc1, 0x45, 0x87, 0x0f,
	0xa7, 0x06, 0x0a, 0x00, 0x6f, 0xa1, 0x45, 0x25, 0x9c, 0xe4, 0x23, 0x93, 0x07, 0x2b, 0x93, 0xbf,
	0x6b, 0xe8, 0x43, 0x63, 0x4e, 0xa5, 0xa0, 0x3f, 0x8e, 0x22, 0x96, 0xe7, 0xb8, 0x8d, 0xea, 0x5d,
	0x2a, 0x61, 0x73, 0xfe, 0xee, 0xd2, 0x97, 0x5b, 0xed, 0x34, 0x1f, 0xb5, 0x8d, 0xde, 0x49, 0x3e,
	0x3a, 0xa2, 0x49, 0x72, 0x14, 0xe7, 0x92, 0x8b, 0x49, 0xa8, 0xf4, 0x20, 0x73, 0x7d, 0x49, 0xe5,
	0x38, 0x37, 0xbe, 0x1a, 0xc9, 0xcd, 0x84, 0x5f, 0xce, 0xc4, 0xa7, 0x68, 0x15, 0x0c, 0xea, 0xa8,
	0x0c, 0xe2, 0x94, 0x05, 0x75, 0xa5, 0x50, 0x41, 0xf1, 0xae, 0x0e, 0x55, 0x8f, 0x4b, 0xc9, 0xc4,
	0x44, 0x29, 0x36, 0x94, 0x62, 0x15, 0x26, 0xff, 0x78, 0xe8, 0xa3, 0xb9, 0x3e, 0x3e, 0xc2, 0x87,
	0x59, 0x2f, 0xbc, 0xe7, 0x7a, 0xe1, 0xcf, 0xf5, 0xa2, 0x20, 0x07, 0x64, 0x35, 0xa8, 0x6f, 0xfb,
	0xbb, 0x5e, 0xe8, 0x20, 0x78, 0x0f, 0xad, 0x18, 0xf5, 0x90, 0x45, 0x5c, 0x0c, 0x83, 0x86, 0x0a,
	0xf1, 0xc7, 0x6e, 0x88, 0x4b, 0x0a, 0x61, 0x59, 0x1f, 0x16, 0x00, 0x35, 0x13, 0xee, 0xa6, 0x66,
	0x5f, 0x81, 0xc0, 0x96, 0xfa, 0x11, 0xcb, 0x40, 0x14, 0x52, 0x79, 0xba, 0xa0, 0xb7, 0x54, 0x46,
	0x81, 0x34, 0x40, 0xbe, 0x0e, 0x1f, 0x67, 0x32, 0x58, 0xd4, 0xa4, 0xb1, 0x00, 0xf9, 0x0e, 0x6d,
	0xcc, 0x73, 0x06, 0xef, 0x54, 0xdd, 0xaf, 0xa9, 0x1d, 0x96, 0x41, 0xf2, 0xd6, 0x92, 0xd4, 0x38,
	0x26, 0x24, 0xde, 0x29, 0x51, 0x6a, 0xcd, 0xdd, 0x2f, 0x2c, 0xab, 0x89, 0x44, 0xfe, 0xf0, 0xd1,
	0x92, 0x83, 0x3e, 0xd8, 0x12, 0xb6, 0xd0, 0xe2, 0x69, 0x7c, 0xc7, 0x4e, 0xa9, 0x49, 0x59, 0x2b,
	0xb4, 0x32, 0x7c, 0x03, 0xad, 0x43, 0x9e, 0x0c, 0x55, 0x96, 0xbc, 0xd0, 0xca, 0x50, 0x9b, 0x30,
	0xee, 0xc6, 0x34, 0xe5, 0xd9, 0x50, 0x71, 0xce, 0x0b, 0x5d, 0x08, 0x34, 0x4e, 0x58, 0x7a, 0xcd,
	0xc4, 0x99, 0x18, 0x32, 0x61, 0xc8, 0xe6, 0x42, 0x98, 0xa0, 0xe5, 0x23, 0x46, 0x87, 0xc7, 0x29,
	0x1d, 0xb1, 0x0b, 0x91, 0xa8, 0x1c, 0xb4, 0xc2, 0x12, 0x06, 0x7e, 0x1f, 0xd0, 0x08, 0x18, 0xa7,
	0xa3, 0x6f, 0x24, 0xc0, 0x43, 0xae, 0x98, 0xa8, 0x43, 0x6e, 0x24, 0x55, 0x40, 0xe3, 0x58, 0x1e,
	0x77, 0x83, 0x96, 0x29, 0x20, 0x25, 0xc1, 0x5a, 0xe7, 0xb7, 0x5c, 0xf2, 0x03, 0x41, 0x53, 0x98,
	0x85, 0xd4, 0xd7, 0x12, 0xe6, 0xd2, 0x7b, 0xe9, 0xc1, 0x76, 0xb7, 0x5c, 0x6a, 0x77, 0x4e, 0xc1,
	0xae, 0x94, 0x0a, 0x76, 0x13, 0x35, 0x0f, 0x59, 0x06, 0x1b, 0x5f, 0xd5, 0xb8, 0x96, 0xc8, 0x7b,
	0xdf, 0x36, 0x0a, 0xf8, 0xeb, 0xf0, 0x2c, 0x4a, 0xc6, 0x43, 0x86, 0x4f, 0xd1, 0xb2, 0x49, 0xfd,
	0x39, 0xbf, 0x63, 0xc2, 0x64, 0xf7, 0x33, 0x37, 0xbb, 0xae, 0x7e, 0xdb, 0x55, 0xde, 0xcf, 0xa4,
	0x98, 0x84, 0xa5, 0xf9, 0xf8, 0x0d, 0x5a, 0xb8, 0x8c, 0x75, 0x63, 0x85, 0xb4, 0x3e, 0x5a, 0x18,
	0x53, 0x4d, 0x70, 0x62, 0xda, 0x47, 0x7b, 0x3c, 0xcf, 0x03, 0xff, 0x09, 0x27, 0x5c, 0x65, 0xe3,
	0x84, 0x0b, 0x6d, 0xfd, 0x84, 0xd6, 0x67, 0xfc, 0xc4, 0x6b, 0xc8, 0xbf, 0x63, 0x13, 0x43, 0x43,
	0x18, 0xe2, 0x36, 0x6a, 0xfc, 0x4a, 0x93, 0x31, 0x33, 0x9e, 0x06, 0x73, 0x3c, 0x55, 0xf3, 0x43,
	0xad, 0xf6, 0x8d, 0xf7, 0xb6, 0xb6, 0xb5, 0x87, 0xd6, 0x67, 0x56, 0x9f, 0x63, 0x7a, 0xc3, 0x35,
	0xed, 0x39, 0x06, 0xc8, 0xa5, 0xd3, 0xb0, 0x9d, 0xb8, 0xbd, 0x42, 0x2d, 0x35, 0x18, 0x4c, 0xee,
	0xed, 0x11, 0x60, 0x01, 0x60, 0x51, 0x29, 0x4b, 0xde, 0xb6, 0x0f, 0x2c, 0x72, 0x31, 0xf2, 0x97,
	0x67, 0x4e, 0xc0, 0xfe, 0xd5, 0xf4, 0xa8, 0x62, 0x19, 0x9b, 0xd3, 0x4e, 0x6a, 0x73, 0xdb, 0x89,
	0x29, 0xac, 0xf2, 0xe9, 0xea, 0x42, 0xf8, 0x73, 0x5d, 0x96, 0xaa, 0x2f, 0xfa, 0x0f, 0x34, 0x01,
	0xab, 0x31, 0xdb, 0x27, 0xeb, 0x2f, 0xec, 0x93, 0xdf, 0xa3, 0x55, 0x30, 0xf6, 0x4e, 0x08, 0xaa,
	0xf7, 0x63, 0x3a, 0xed, 0x66, 0x61, 0xa1, 0x73, 0x05, 0xf4, 0xd1, 0x5f, 0xc3, 0x8a, 0x36, 0xfe,
	0x0a, 0xa1, 0xe2, 0xcc, 0x0f, 0x9a, 0x8f, 0xce, 0x75, 0x34, 0xc9, 0x9e, 0xbd, 0x32, 0x14, 0x0a,
	0x70, 0x92, 0x3b, 0x97, 0x05, 0x35, 0x86, 0x52, 0x33, 0xc6, 0x75, 0x92, 0x8d, 0x44, 0xde, 0xd7,
	0x6c, 0x0b, 0x84, 0x43, 0xec, 0x91, 0xd3, 0x6b, 0x26, 0x46, 0x4f, 0x96, 0x4c, 0x25, 0x46, 0xa5,
	0x33, 0xc0, 0xaf, 0x9e, 0x01, 0xa9, 0xd9, 0x49, 0xdf, 0xdd, 0xc9, 0xc3, 0xde, 0xcc, 0x06, 0xdc,
	0x7b, 0x49, 0xc0, 0xc9, 0x9f, 0xf5, 0x2a, 0xb5, 0xff, 0xe7, 0x0c, 0xac, 0xf6, 0xd6, 0xe6, 0x6c,
	0x5b, 0x73, 0x03, 0xf5, 0x92, 0xde, 0xba, 0xf0, 0xec, 0xde, 0x5a, 0x2e, 0x83, 0xc5, 0xe7, 0x96,
	0xc1, 0x7f, 0xd8, 0x43, 0xc9, 0xcf, 0xf6, 0x6e, 0x62, 0x2e, 0xfc, 0xa7, 0x5c, 0xc6, 0x37, 0x93,
	0x2a, 0x01, 0x6a, 0xb3, 0x04, 0xd8, 0x41, 0x75, 0x10, 0xcd, 0x62, 0x73, 0xee, 0x20, 0xf0, 0x4b,
	0xbe, 0x28, 0xec, 0xeb, 0x67, 0x80, 0xb1, 0xef, 0x9c, 0xa6, 0xb5, 0xf2, 0xe3, 0xa1, 0x98, 0x71,
	0x76, 0x73, 0xd3, 0x8b, 0x33, 0xf6, 0xe4, 0x8c, 0xd7, 0x96, 0xeb, 0x67, 0xd9, 0xb3, 0x26, 0x70,
	0x5b, 0x8c, 0xce, 0x4b, 0xe4, 0x41, 0xf5, 0xca, 0x1b, 0xc5, 0x7b, 0xea, 0x8d, 0xe2, 0xcf, 0xbe,
	0x51, 0xbe, 0x35, 0x6f, 0x94, 0x7e, 0xf1, 0x46, 0xd9, 0x2d, 0x5d, 0xe1, 0x36, 0xdc, 0xf0, 0x0d,
	0x58, 0x7a, 0xef, 0x5c, 0xe3, 0xc6, 0x76, 0xf2, 0xf4, 0x83, 0x8d, 0x7d, 0xed, 0xb1, 0xd8, 0x83,
	0x5f, 0x03, 0x2e, 0x69, 0x52, 0xea, 0x8c, 0x2e, 0x04, 0xb7, 0x3b, 0x25, 0x5e, 0xc6, 0x99, 0x69,
	0x59, 0x56, 0xbe, 0x6e, 0xaa, 0xa7, 0xea, 0x9b, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xc1, 0xd7,
	0x48, 0xaf, 0xbb, 0x0e, 0x00, 0x00,
}
