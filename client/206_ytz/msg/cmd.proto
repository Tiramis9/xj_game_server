syntax = "proto3";
package msg;

/*--------------------------------------------------------------------客户端消息------------------------------------------------------------*/
//登陆消息
message Game_C_TokenLogin {
    string Token = 1;           //用户token
    string MachineID = 2;       //机器序列号
}

//机器人登陆
message Game_C_RobotLogin {
    int32 UserID = 1;           //用户ID
    int32 BatchID = 2;          //机器人批次ID
}

//用户坐下
message Game_C_UserSitDown {
    int32 TableID = 1;          //桌子号
    int32 ChairID = 2;          //椅子号
}

//用户起立
message Game_C_UserStandUp {
}

//用户叫骰
message Game_C_UserHP {
    int32 Type  = 1;            //类型0 叫点  1 指定人叫点 2 反转
    int32 ChairID = 2;          //椅子号
    int32 Multiple = 3;         //多少个
    int32 Point = 4;            //点数
    int32 NetChairID = 5;       //指定下个叫点人
    bool IsZai = 6;             //是否栽
}

//用户开牌
message Game_C_UserKP {
}

//用户劈
message Game_C_UserP {
    repeated int32 ChairID = 1;         //劈的椅子号数组
}

//用户反劈
message Game_C_UserFP {
    int32 ChairID = 1;         //反劈椅子号
}

//用户弃牌
message Game_C_UserQP {
}

/*--------------------------------------------------------------------服务端消息------------------------------------------------------------*/

//user
message Game_S_User {
    int32 UserID = 1; //用户ID
    string NikeName = 2; //网名
    float UserGold = 3; //用户金币
    float UserDiamond = 4;//用户余额
    int32 MemberOrder = 5; //会员等级
    string HeadImageUrl = 6; //微信头像url
    int32 FaceID = 7; //头像ID
    int32 RoleID = 8; //角色标识
    int32 SuitID = 9; //套装标识
    int32 PhotoFrameID = 10;//头像框标识
    int32 TableID = 11;//桌子号
    int32 ChairID = 12; //椅子号
    int32 Status = 13; //用户状态
    int32 Gender = 14;//性别：0女，1男
}

// 叫点结构体
message Game_S_JD {
	int32 Multiple = 1;  //多少个
	int32 Point = 2; //多少点
	bool IsZai = 3;  //是否栽
}

//请求失败
message Game_S_ReqlyFail {
    int32 ErrorCode = 1;        //错误代码
    string ErrorMsg = 2;        //错误描述
}

//登陆成功
message Game_S_LoginSuccess {
    int32 GameZbTime = 1;    	    //准备持续时间单位s
    int32 GameCzTime = 2;    	    //操作持续时间单位s
    int32 Multiple = 3;    	        //倍数
    int32 Status = 4;                //是否断线重连
}

//坐下通知消息
message Game_S_SitDownNotify {
    Game_S_User Data = 1;
}

//起立通知消息
message Game_S_StandUpNotify {
    int32 ChairID = 1;
}

//掉线通知消息
message Game_S_OffLineNotify {
    int32 ChairID = 1;
}

//上线通知消息
message Game_S_OnLineNotify {
    int32 ChairID = 1;
}

//劈通知
message Game_S_PNotify {
    int32 ChairID = 1;     //劈的人
    int32 NetChairID = 2;       //下个叫骰的人
    repeated int32 PChairArray = 3;         //劈的椅子号数组
}

//反劈通知
message Game_S_FPNotify {
    int32 FpChairID = 1;     //反劈的人
    int32 NetChairID = 2;       //下个叫骰的人
}

//叫骰通知
message Game_S_UserJetton {
    int32 Type  = 1;            //类型0 叫点  1 指定人叫点 2 反转
    int32 Multiple = 2;         //多少个
    int32 Point = 3;            //点数
    int32 ChairID = 4;          //椅子号
    int32 NetChairID = 5;       //下个叫骰的人
    bool IsZai = 6;             //是否栽
}

//弃牌通知
message Game_S_UserQP {
    int32 ChairID = 1;          //用户椅子号
    int32 NetChairID = 2;       //下个叫骰的人
}

//开牌通知
message Game_S_UserKP {
    int32 ChairID = 1;          //用户椅子号
    int32 NetChairID = 3;       //下个叫骰的人
}


//空闲场景
message Game_S_FreeScene {
    sint64 SceneStartTime = 1; //场景开始时间
    int32 UserChairID = 2; //用户椅子号
    repeated Game_S_User UserList = 3;//桌面用户
}

//叫骰场景消息
message Game_S_JettonScene {
    int64 SceneStartTime = 1;//场景剩余时间
    int32 UserChairID = 2; //用户椅子号
    repeated Game_S_User UserList = 3;//桌面用户
    repeated int32 LotteryPoker =4;//玩家骰子
    int32 CurrentChairID = 5;       //当前叫骰的人
    map<int32,Game_S_JD> UserJDList = 6;//用户叫骰历史
    map<int32,int32> UserMultiple = 7;//桌面玩家倍数
    int32 TableMultiple = 8;//桌子倍数
    bool IsReverse = 9;         //是否顺时针
}

//劈场景消息
message Game_S_PScene {
    int64 SceneStartTime = 1;//场景剩余时间
    int32 UserChairID = 2; //用户椅子号
    repeated Game_S_User UserList = 3;//桌面用户
    repeated int32 LotteryPoker =4;//玩家骰子
    int32 CurrentChairID = 5;       //当前叫骰的人
    map<int32,Game_S_JD> UserJDList = 6;//用户叫骰历史
    map<int32,int32> UserMultiple = 7;//桌面玩家倍数
    int32 TableMultiple = 8;//桌子倍数
    bool IsReverse = 9;         //是否顺时针
    int32 PChairID = 10;         //发起玩家
    repeated int32 PChairIDs = 11;         //被劈玩家数组
}



//开始游戏
message Game_S_StartTime {
    int32 CurrentChairID = 1;//操作用户用户椅子号
    map<int32,Game_S_LotteryPoker> LotteryPokers = 2;//所有玩家骰子
    map<int32,int32> UserListPokerPointNum = 3; //点->数量
    int32 UserCount = 4; //游戏人数
}

// 骰子
message Game_S_LotteryPoker {
    repeated int32 LotteryPoker =1;
}

//结束游戏消息
message Game_S_GameConclude {
    repeated int32 WinChairID = 1; //赢家椅子号
    map<int32,int32> UserCellScore = 2;//玩家倍数
    map<int32,Game_S_LotteryPoker> LotteryPokers = 3;//所有玩家骰子
    map<int32,float> UserListLoss = 4; //用户输赢
    map<int32,float> UserListMoney = 5; //用户最后的钱
    int32 TableMultiple = 6;//桌子倍数
}


