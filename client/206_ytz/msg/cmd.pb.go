// Code generated by protoc-gen-go. DO NOT EDIT.
// source: msg/cmd.proto

package msg

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//登陆消息
type Game_C_TokenLogin struct {
	Token                string   `protobuf:"bytes,1,opt,name=Token,proto3" json:"Token,omitempty"`
	MachineID            string   `protobuf:"bytes,2,opt,name=MachineID,proto3" json:"MachineID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game_C_TokenLogin) Reset()         { *m = Game_C_TokenLogin{} }
func (m *Game_C_TokenLogin) String() string { return proto.CompactTextString(m) }
func (*Game_C_TokenLogin) ProtoMessage()    {}
func (*Game_C_TokenLogin) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{0}
}

func (m *Game_C_TokenLogin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_C_TokenLogin.Unmarshal(m, b)
}
func (m *Game_C_TokenLogin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_C_TokenLogin.Marshal(b, m, deterministic)
}
func (m *Game_C_TokenLogin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_C_TokenLogin.Merge(m, src)
}
func (m *Game_C_TokenLogin) XXX_Size() int {
	return xxx_messageInfo_Game_C_TokenLogin.Size(m)
}
func (m *Game_C_TokenLogin) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_C_TokenLogin.DiscardUnknown(m)
}

var xxx_messageInfo_Game_C_TokenLogin proto.InternalMessageInfo

func (m *Game_C_TokenLogin) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Game_C_TokenLogin) GetMachineID() string {
	if m != nil {
		return m.MachineID
	}
	return ""
}

//机器人登陆
type Game_C_RobotLogin struct {
	UserID               int32    `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	BatchID              int32    `protobuf:"varint,2,opt,name=BatchID,proto3" json:"BatchID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game_C_RobotLogin) Reset()         { *m = Game_C_RobotLogin{} }
func (m *Game_C_RobotLogin) String() string { return proto.CompactTextString(m) }
func (*Game_C_RobotLogin) ProtoMessage()    {}
func (*Game_C_RobotLogin) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{1}
}

func (m *Game_C_RobotLogin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_C_RobotLogin.Unmarshal(m, b)
}
func (m *Game_C_RobotLogin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_C_RobotLogin.Marshal(b, m, deterministic)
}
func (m *Game_C_RobotLogin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_C_RobotLogin.Merge(m, src)
}
func (m *Game_C_RobotLogin) XXX_Size() int {
	return xxx_messageInfo_Game_C_RobotLogin.Size(m)
}
func (m *Game_C_RobotLogin) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_C_RobotLogin.DiscardUnknown(m)
}

var xxx_messageInfo_Game_C_RobotLogin proto.InternalMessageInfo

func (m *Game_C_RobotLogin) GetUserID() int32 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *Game_C_RobotLogin) GetBatchID() int32 {
	if m != nil {
		return m.BatchID
	}
	return 0
}

//用户坐下
type Game_C_UserSitDown struct {
	TableID              int32    `protobuf:"varint,1,opt,name=TableID,proto3" json:"TableID,omitempty"`
	ChairID              int32    `protobuf:"varint,2,opt,name=ChairID,proto3" json:"ChairID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game_C_UserSitDown) Reset()         { *m = Game_C_UserSitDown{} }
func (m *Game_C_UserSitDown) String() string { return proto.CompactTextString(m) }
func (*Game_C_UserSitDown) ProtoMessage()    {}
func (*Game_C_UserSitDown) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{2}
}

func (m *Game_C_UserSitDown) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_C_UserSitDown.Unmarshal(m, b)
}
func (m *Game_C_UserSitDown) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_C_UserSitDown.Marshal(b, m, deterministic)
}
func (m *Game_C_UserSitDown) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_C_UserSitDown.Merge(m, src)
}
func (m *Game_C_UserSitDown) XXX_Size() int {
	return xxx_messageInfo_Game_C_UserSitDown.Size(m)
}
func (m *Game_C_UserSitDown) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_C_UserSitDown.DiscardUnknown(m)
}

var xxx_messageInfo_Game_C_UserSitDown proto.InternalMessageInfo

func (m *Game_C_UserSitDown) GetTableID() int32 {
	if m != nil {
		return m.TableID
	}
	return 0
}

func (m *Game_C_UserSitDown) GetChairID() int32 {
	if m != nil {
		return m.ChairID
	}
	return 0
}

//用户起立
type Game_C_UserStandUp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game_C_UserStandUp) Reset()         { *m = Game_C_UserStandUp{} }
func (m *Game_C_UserStandUp) String() string { return proto.CompactTextString(m) }
func (*Game_C_UserStandUp) ProtoMessage()    {}
func (*Game_C_UserStandUp) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{3}
}

func (m *Game_C_UserStandUp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_C_UserStandUp.Unmarshal(m, b)
}
func (m *Game_C_UserStandUp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_C_UserStandUp.Marshal(b, m, deterministic)
}
func (m *Game_C_UserStandUp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_C_UserStandUp.Merge(m, src)
}
func (m *Game_C_UserStandUp) XXX_Size() int {
	return xxx_messageInfo_Game_C_UserStandUp.Size(m)
}
func (m *Game_C_UserStandUp) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_C_UserStandUp.DiscardUnknown(m)
}

var xxx_messageInfo_Game_C_UserStandUp proto.InternalMessageInfo

//用户叫骰
type Game_C_UserHP struct {
	Type                 int32    `protobuf:"varint,1,opt,name=Type,proto3" json:"Type,omitempty"`
	ChairID              int32    `protobuf:"varint,2,opt,name=ChairID,proto3" json:"ChairID,omitempty"`
	Multiple             int32    `protobuf:"varint,3,opt,name=Multiple,proto3" json:"Multiple,omitempty"`
	Point                int32    `protobuf:"varint,4,opt,name=Point,proto3" json:"Point,omitempty"`
	NetChairID           int32    `protobuf:"varint,5,opt,name=NetChairID,proto3" json:"NetChairID,omitempty"`
	IsZai                bool     `protobuf:"varint,6,opt,name=IsZai,proto3" json:"IsZai,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game_C_UserHP) Reset()         { *m = Game_C_UserHP{} }
func (m *Game_C_UserHP) String() string { return proto.CompactTextString(m) }
func (*Game_C_UserHP) ProtoMessage()    {}
func (*Game_C_UserHP) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{4}
}

func (m *Game_C_UserHP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_C_UserHP.Unmarshal(m, b)
}
func (m *Game_C_UserHP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_C_UserHP.Marshal(b, m, deterministic)
}
func (m *Game_C_UserHP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_C_UserHP.Merge(m, src)
}
func (m *Game_C_UserHP) XXX_Size() int {
	return xxx_messageInfo_Game_C_UserHP.Size(m)
}
func (m *Game_C_UserHP) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_C_UserHP.DiscardUnknown(m)
}

var xxx_messageInfo_Game_C_UserHP proto.InternalMessageInfo

func (m *Game_C_UserHP) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *Game_C_UserHP) GetChairID() int32 {
	if m != nil {
		return m.ChairID
	}
	return 0
}

func (m *Game_C_UserHP) GetMultiple() int32 {
	if m != nil {
		return m.Multiple
	}
	return 0
}

func (m *Game_C_UserHP) GetPoint() int32 {
	if m != nil {
		return m.Point
	}
	return 0
}

func (m *Game_C_UserHP) GetNetChairID() int32 {
	if m != nil {
		return m.NetChairID
	}
	return 0
}

func (m *Game_C_UserHP) GetIsZai() bool {
	if m != nil {
		return m.IsZai
	}
	return false
}

//用户开牌
type Game_C_UserKP struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game_C_UserKP) Reset()         { *m = Game_C_UserKP{} }
func (m *Game_C_UserKP) String() string { return proto.CompactTextString(m) }
func (*Game_C_UserKP) ProtoMessage()    {}
func (*Game_C_UserKP) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{5}
}

func (m *Game_C_UserKP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_C_UserKP.Unmarshal(m, b)
}
func (m *Game_C_UserKP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_C_UserKP.Marshal(b, m, deterministic)
}
func (m *Game_C_UserKP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_C_UserKP.Merge(m, src)
}
func (m *Game_C_UserKP) XXX_Size() int {
	return xxx_messageInfo_Game_C_UserKP.Size(m)
}
func (m *Game_C_UserKP) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_C_UserKP.DiscardUnknown(m)
}

var xxx_messageInfo_Game_C_UserKP proto.InternalMessageInfo

//用户劈
type Game_C_UserP struct {
	ChairID              []int32  `protobuf:"varint,1,rep,packed,name=ChairID,proto3" json:"ChairID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game_C_UserP) Reset()         { *m = Game_C_UserP{} }
func (m *Game_C_UserP) String() string { return proto.CompactTextString(m) }
func (*Game_C_UserP) ProtoMessage()    {}
func (*Game_C_UserP) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{6}
}

func (m *Game_C_UserP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_C_UserP.Unmarshal(m, b)
}
func (m *Game_C_UserP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_C_UserP.Marshal(b, m, deterministic)
}
func (m *Game_C_UserP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_C_UserP.Merge(m, src)
}
func (m *Game_C_UserP) XXX_Size() int {
	return xxx_messageInfo_Game_C_UserP.Size(m)
}
func (m *Game_C_UserP) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_C_UserP.DiscardUnknown(m)
}

var xxx_messageInfo_Game_C_UserP proto.InternalMessageInfo

func (m *Game_C_UserP) GetChairID() []int32 {
	if m != nil {
		return m.ChairID
	}
	return nil
}

//用户反劈
type Game_C_UserFP struct {
	ChairID              int32    `protobuf:"varint,1,opt,name=ChairID,proto3" json:"ChairID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game_C_UserFP) Reset()         { *m = Game_C_UserFP{} }
func (m *Game_C_UserFP) String() string { return proto.CompactTextString(m) }
func (*Game_C_UserFP) ProtoMessage()    {}
func (*Game_C_UserFP) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{7}
}

func (m *Game_C_UserFP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_C_UserFP.Unmarshal(m, b)
}
func (m *Game_C_UserFP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_C_UserFP.Marshal(b, m, deterministic)
}
func (m *Game_C_UserFP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_C_UserFP.Merge(m, src)
}
func (m *Game_C_UserFP) XXX_Size() int {
	return xxx_messageInfo_Game_C_UserFP.Size(m)
}
func (m *Game_C_UserFP) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_C_UserFP.DiscardUnknown(m)
}

var xxx_messageInfo_Game_C_UserFP proto.InternalMessageInfo

func (m *Game_C_UserFP) GetChairID() int32 {
	if m != nil {
		return m.ChairID
	}
	return 0
}

//用户弃牌
type Game_C_UserQP struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game_C_UserQP) Reset()         { *m = Game_C_UserQP{} }
func (m *Game_C_UserQP) String() string { return proto.CompactTextString(m) }
func (*Game_C_UserQP) ProtoMessage()    {}
func (*Game_C_UserQP) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{8}
}

func (m *Game_C_UserQP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_C_UserQP.Unmarshal(m, b)
}
func (m *Game_C_UserQP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_C_UserQP.Marshal(b, m, deterministic)
}
func (m *Game_C_UserQP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_C_UserQP.Merge(m, src)
}
func (m *Game_C_UserQP) XXX_Size() int {
	return xxx_messageInfo_Game_C_UserQP.Size(m)
}
func (m *Game_C_UserQP) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_C_UserQP.DiscardUnknown(m)
}

var xxx_messageInfo_Game_C_UserQP proto.InternalMessageInfo

//user
type Game_S_User struct {
	UserID               int32    `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	NikeName             string   `protobuf:"bytes,2,opt,name=NikeName,proto3" json:"NikeName,omitempty"`
	UserGold             float32  `protobuf:"fixed32,3,opt,name=UserGold,proto3" json:"UserGold,omitempty"`
	UserDiamond          float32  `protobuf:"fixed32,4,opt,name=UserDiamond,proto3" json:"UserDiamond,omitempty"`
	MemberOrder          int32    `protobuf:"varint,5,opt,name=MemberOrder,proto3" json:"MemberOrder,omitempty"`
	HeadImageUrl         string   `protobuf:"bytes,6,opt,name=HeadImageUrl,proto3" json:"HeadImageUrl,omitempty"`
	FaceID               int32    `protobuf:"varint,7,opt,name=FaceID,proto3" json:"FaceID,omitempty"`
	RoleID               int32    `protobuf:"varint,8,opt,name=RoleID,proto3" json:"RoleID,omitempty"`
	SuitID               int32    `protobuf:"varint,9,opt,name=SuitID,proto3" json:"SuitID,omitempty"`
	PhotoFrameID         int32    `protobuf:"varint,10,opt,name=PhotoFrameID,proto3" json:"PhotoFrameID,omitempty"`
	TableID              int32    `protobuf:"varint,11,opt,name=TableID,proto3" json:"TableID,omitempty"`
	ChairID              int32    `protobuf:"varint,12,opt,name=ChairID,proto3" json:"ChairID,omitempty"`
	Status               int32    `protobuf:"varint,13,opt,name=Status,proto3" json:"Status,omitempty"`
	Gender               int32    `protobuf:"varint,14,opt,name=Gender,proto3" json:"Gender,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game_S_User) Reset()         { *m = Game_S_User{} }
func (m *Game_S_User) String() string { return proto.CompactTextString(m) }
func (*Game_S_User) ProtoMessage()    {}
func (*Game_S_User) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{9}
}

func (m *Game_S_User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_S_User.Unmarshal(m, b)
}
func (m *Game_S_User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_S_User.Marshal(b, m, deterministic)
}
func (m *Game_S_User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_S_User.Merge(m, src)
}
func (m *Game_S_User) XXX_Size() int {
	return xxx_messageInfo_Game_S_User.Size(m)
}
func (m *Game_S_User) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_S_User.DiscardUnknown(m)
}

var xxx_messageInfo_Game_S_User proto.InternalMessageInfo

func (m *Game_S_User) GetUserID() int32 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *Game_S_User) GetNikeName() string {
	if m != nil {
		return m.NikeName
	}
	return ""
}

func (m *Game_S_User) GetUserGold() float32 {
	if m != nil {
		return m.UserGold
	}
	return 0
}

func (m *Game_S_User) GetUserDiamond() float32 {
	if m != nil {
		return m.UserDiamond
	}
	return 0
}

func (m *Game_S_User) GetMemberOrder() int32 {
	if m != nil {
		return m.MemberOrder
	}
	return 0
}

func (m *Game_S_User) GetHeadImageUrl() string {
	if m != nil {
		return m.HeadImageUrl
	}
	return ""
}

func (m *Game_S_User) GetFaceID() int32 {
	if m != nil {
		return m.FaceID
	}
	return 0
}

func (m *Game_S_User) GetRoleID() int32 {
	if m != nil {
		return m.RoleID
	}
	return 0
}

func (m *Game_S_User) GetSuitID() int32 {
	if m != nil {
		return m.SuitID
	}
	return 0
}

func (m *Game_S_User) GetPhotoFrameID() int32 {
	if m != nil {
		return m.PhotoFrameID
	}
	return 0
}

func (m *Game_S_User) GetTableID() int32 {
	if m != nil {
		return m.TableID
	}
	return 0
}

func (m *Game_S_User) GetChairID() int32 {
	if m != nil {
		return m.ChairID
	}
	return 0
}

func (m *Game_S_User) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Game_S_User) GetGender() int32 {
	if m != nil {
		return m.Gender
	}
	return 0
}

// 叫点结构体
type Game_S_JD struct {
	Multiple             int32    `protobuf:"varint,1,opt,name=Multiple,proto3" json:"Multiple,omitempty"`
	Point                int32    `protobuf:"varint,2,opt,name=Point,proto3" json:"Point,omitempty"`
	IsZai                bool     `protobuf:"varint,3,opt,name=IsZai,proto3" json:"IsZai,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game_S_JD) Reset()         { *m = Game_S_JD{} }
func (m *Game_S_JD) String() string { return proto.CompactTextString(m) }
func (*Game_S_JD) ProtoMessage()    {}
func (*Game_S_JD) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{10}
}

func (m *Game_S_JD) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_S_JD.Unmarshal(m, b)
}
func (m *Game_S_JD) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_S_JD.Marshal(b, m, deterministic)
}
func (m *Game_S_JD) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_S_JD.Merge(m, src)
}
func (m *Game_S_JD) XXX_Size() int {
	return xxx_messageInfo_Game_S_JD.Size(m)
}
func (m *Game_S_JD) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_S_JD.DiscardUnknown(m)
}

var xxx_messageInfo_Game_S_JD proto.InternalMessageInfo

func (m *Game_S_JD) GetMultiple() int32 {
	if m != nil {
		return m.Multiple
	}
	return 0
}

func (m *Game_S_JD) GetPoint() int32 {
	if m != nil {
		return m.Point
	}
	return 0
}

func (m *Game_S_JD) GetIsZai() bool {
	if m != nil {
		return m.IsZai
	}
	return false
}

//请求失败
type Game_S_ReqlyFail struct {
	ErrorCode            int32    `protobuf:"varint,1,opt,name=ErrorCode,proto3" json:"ErrorCode,omitempty"`
	ErrorMsg             string   `protobuf:"bytes,2,opt,name=ErrorMsg,proto3" json:"ErrorMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game_S_ReqlyFail) Reset()         { *m = Game_S_ReqlyFail{} }
func (m *Game_S_ReqlyFail) String() string { return proto.CompactTextString(m) }
func (*Game_S_ReqlyFail) ProtoMessage()    {}
func (*Game_S_ReqlyFail) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{11}
}

func (m *Game_S_ReqlyFail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_S_ReqlyFail.Unmarshal(m, b)
}
func (m *Game_S_ReqlyFail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_S_ReqlyFail.Marshal(b, m, deterministic)
}
func (m *Game_S_ReqlyFail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_S_ReqlyFail.Merge(m, src)
}
func (m *Game_S_ReqlyFail) XXX_Size() int {
	return xxx_messageInfo_Game_S_ReqlyFail.Size(m)
}
func (m *Game_S_ReqlyFail) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_S_ReqlyFail.DiscardUnknown(m)
}

var xxx_messageInfo_Game_S_ReqlyFail proto.InternalMessageInfo

func (m *Game_S_ReqlyFail) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *Game_S_ReqlyFail) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

//登陆成功
type Game_S_LoginSuccess struct {
	GameZbTime           int32    `protobuf:"varint,1,opt,name=GameZbTime,proto3" json:"GameZbTime,omitempty"`
	GameCzTime           int32    `protobuf:"varint,2,opt,name=GameCzTime,proto3" json:"GameCzTime,omitempty"`
	Multiple             int32    `protobuf:"varint,3,opt,name=Multiple,proto3" json:"Multiple,omitempty"`
	Status               int32    `protobuf:"varint,4,opt,name=Status,proto3" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game_S_LoginSuccess) Reset()         { *m = Game_S_LoginSuccess{} }
func (m *Game_S_LoginSuccess) String() string { return proto.CompactTextString(m) }
func (*Game_S_LoginSuccess) ProtoMessage()    {}
func (*Game_S_LoginSuccess) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{12}
}

func (m *Game_S_LoginSuccess) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_S_LoginSuccess.Unmarshal(m, b)
}
func (m *Game_S_LoginSuccess) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_S_LoginSuccess.Marshal(b, m, deterministic)
}
func (m *Game_S_LoginSuccess) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_S_LoginSuccess.Merge(m, src)
}
func (m *Game_S_LoginSuccess) XXX_Size() int {
	return xxx_messageInfo_Game_S_LoginSuccess.Size(m)
}
func (m *Game_S_LoginSuccess) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_S_LoginSuccess.DiscardUnknown(m)
}

var xxx_messageInfo_Game_S_LoginSuccess proto.InternalMessageInfo

func (m *Game_S_LoginSuccess) GetGameZbTime() int32 {
	if m != nil {
		return m.GameZbTime
	}
	return 0
}

func (m *Game_S_LoginSuccess) GetGameCzTime() int32 {
	if m != nil {
		return m.GameCzTime
	}
	return 0
}

func (m *Game_S_LoginSuccess) GetMultiple() int32 {
	if m != nil {
		return m.Multiple
	}
	return 0
}

func (m *Game_S_LoginSuccess) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

//坐下通知消息
type Game_S_SitDownNotify struct {
	Data                 *Game_S_User `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Game_S_SitDownNotify) Reset()         { *m = Game_S_SitDownNotify{} }
func (m *Game_S_SitDownNotify) String() string { return proto.CompactTextString(m) }
func (*Game_S_SitDownNotify) ProtoMessage()    {}
func (*Game_S_SitDownNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{13}
}

func (m *Game_S_SitDownNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_S_SitDownNotify.Unmarshal(m, b)
}
func (m *Game_S_SitDownNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_S_SitDownNotify.Marshal(b, m, deterministic)
}
func (m *Game_S_SitDownNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_S_SitDownNotify.Merge(m, src)
}
func (m *Game_S_SitDownNotify) XXX_Size() int {
	return xxx_messageInfo_Game_S_SitDownNotify.Size(m)
}
func (m *Game_S_SitDownNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_S_SitDownNotify.DiscardUnknown(m)
}

var xxx_messageInfo_Game_S_SitDownNotify proto.InternalMessageInfo

func (m *Game_S_SitDownNotify) GetData() *Game_S_User {
	if m != nil {
		return m.Data
	}
	return nil
}

//起立通知消息
type Game_S_StandUpNotify struct {
	ChairID              int32    `protobuf:"varint,1,opt,name=ChairID,proto3" json:"ChairID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game_S_StandUpNotify) Reset()         { *m = Game_S_StandUpNotify{} }
func (m *Game_S_StandUpNotify) String() string { return proto.CompactTextString(m) }
func (*Game_S_StandUpNotify) ProtoMessage()    {}
func (*Game_S_StandUpNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{14}
}

func (m *Game_S_StandUpNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_S_StandUpNotify.Unmarshal(m, b)
}
func (m *Game_S_StandUpNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_S_StandUpNotify.Marshal(b, m, deterministic)
}
func (m *Game_S_StandUpNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_S_StandUpNotify.Merge(m, src)
}
func (m *Game_S_StandUpNotify) XXX_Size() int {
	return xxx_messageInfo_Game_S_StandUpNotify.Size(m)
}
func (m *Game_S_StandUpNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_S_StandUpNotify.DiscardUnknown(m)
}

var xxx_messageInfo_Game_S_StandUpNotify proto.InternalMessageInfo

func (m *Game_S_StandUpNotify) GetChairID() int32 {
	if m != nil {
		return m.ChairID
	}
	return 0
}

//掉线通知消息
type Game_S_OffLineNotify struct {
	ChairID              int32    `protobuf:"varint,1,opt,name=ChairID,proto3" json:"ChairID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game_S_OffLineNotify) Reset()         { *m = Game_S_OffLineNotify{} }
func (m *Game_S_OffLineNotify) String() string { return proto.CompactTextString(m) }
func (*Game_S_OffLineNotify) ProtoMessage()    {}
func (*Game_S_OffLineNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{15}
}

func (m *Game_S_OffLineNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_S_OffLineNotify.Unmarshal(m, b)
}
func (m *Game_S_OffLineNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_S_OffLineNotify.Marshal(b, m, deterministic)
}
func (m *Game_S_OffLineNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_S_OffLineNotify.Merge(m, src)
}
func (m *Game_S_OffLineNotify) XXX_Size() int {
	return xxx_messageInfo_Game_S_OffLineNotify.Size(m)
}
func (m *Game_S_OffLineNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_S_OffLineNotify.DiscardUnknown(m)
}

var xxx_messageInfo_Game_S_OffLineNotify proto.InternalMessageInfo

func (m *Game_S_OffLineNotify) GetChairID() int32 {
	if m != nil {
		return m.ChairID
	}
	return 0
}

//上线通知消息
type Game_S_OnLineNotify struct {
	ChairID              int32    `protobuf:"varint,1,opt,name=ChairID,proto3" json:"ChairID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game_S_OnLineNotify) Reset()         { *m = Game_S_OnLineNotify{} }
func (m *Game_S_OnLineNotify) String() string { return proto.CompactTextString(m) }
func (*Game_S_OnLineNotify) ProtoMessage()    {}
func (*Game_S_OnLineNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{16}
}

func (m *Game_S_OnLineNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_S_OnLineNotify.Unmarshal(m, b)
}
func (m *Game_S_OnLineNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_S_OnLineNotify.Marshal(b, m, deterministic)
}
func (m *Game_S_OnLineNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_S_OnLineNotify.Merge(m, src)
}
func (m *Game_S_OnLineNotify) XXX_Size() int {
	return xxx_messageInfo_Game_S_OnLineNotify.Size(m)
}
func (m *Game_S_OnLineNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_S_OnLineNotify.DiscardUnknown(m)
}

var xxx_messageInfo_Game_S_OnLineNotify proto.InternalMessageInfo

func (m *Game_S_OnLineNotify) GetChairID() int32 {
	if m != nil {
		return m.ChairID
	}
	return 0
}

//劈通知
type Game_S_PNotify struct {
	ChairID              int32    `protobuf:"varint,1,opt,name=ChairID,proto3" json:"ChairID,omitempty"`
	NetChairID           int32    `protobuf:"varint,2,opt,name=NetChairID,proto3" json:"NetChairID,omitempty"`
	PChairArray          []int32  `protobuf:"varint,3,rep,packed,name=PChairArray,proto3" json:"PChairArray,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game_S_PNotify) Reset()         { *m = Game_S_PNotify{} }
func (m *Game_S_PNotify) String() string { return proto.CompactTextString(m) }
func (*Game_S_PNotify) ProtoMessage()    {}
func (*Game_S_PNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{17}
}

func (m *Game_S_PNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_S_PNotify.Unmarshal(m, b)
}
func (m *Game_S_PNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_S_PNotify.Marshal(b, m, deterministic)
}
func (m *Game_S_PNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_S_PNotify.Merge(m, src)
}
func (m *Game_S_PNotify) XXX_Size() int {
	return xxx_messageInfo_Game_S_PNotify.Size(m)
}
func (m *Game_S_PNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_S_PNotify.DiscardUnknown(m)
}

var xxx_messageInfo_Game_S_PNotify proto.InternalMessageInfo

func (m *Game_S_PNotify) GetChairID() int32 {
	if m != nil {
		return m.ChairID
	}
	return 0
}

func (m *Game_S_PNotify) GetNetChairID() int32 {
	if m != nil {
		return m.NetChairID
	}
	return 0
}

func (m *Game_S_PNotify) GetPChairArray() []int32 {
	if m != nil {
		return m.PChairArray
	}
	return nil
}

//反劈通知
type Game_S_FPNotify struct {
	FpChairID            int32    `protobuf:"varint,1,opt,name=FpChairID,proto3" json:"FpChairID,omitempty"`
	NetChairID           int32    `protobuf:"varint,2,opt,name=NetChairID,proto3" json:"NetChairID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game_S_FPNotify) Reset()         { *m = Game_S_FPNotify{} }
func (m *Game_S_FPNotify) String() string { return proto.CompactTextString(m) }
func (*Game_S_FPNotify) ProtoMessage()    {}
func (*Game_S_FPNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{18}
}

func (m *Game_S_FPNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_S_FPNotify.Unmarshal(m, b)
}
func (m *Game_S_FPNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_S_FPNotify.Marshal(b, m, deterministic)
}
func (m *Game_S_FPNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_S_FPNotify.Merge(m, src)
}
func (m *Game_S_FPNotify) XXX_Size() int {
	return xxx_messageInfo_Game_S_FPNotify.Size(m)
}
func (m *Game_S_FPNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_S_FPNotify.DiscardUnknown(m)
}

var xxx_messageInfo_Game_S_FPNotify proto.InternalMessageInfo

func (m *Game_S_FPNotify) GetFpChairID() int32 {
	if m != nil {
		return m.FpChairID
	}
	return 0
}

func (m *Game_S_FPNotify) GetNetChairID() int32 {
	if m != nil {
		return m.NetChairID
	}
	return 0
}

//叫骰通知
type Game_S_UserJetton struct {
	Type                 int32    `protobuf:"varint,1,opt,name=Type,proto3" json:"Type,omitempty"`
	Multiple             int32    `protobuf:"varint,2,opt,name=Multiple,proto3" json:"Multiple,omitempty"`
	Point                int32    `protobuf:"varint,3,opt,name=Point,proto3" json:"Point,omitempty"`
	ChairID              int32    `protobuf:"varint,4,opt,name=ChairID,proto3" json:"ChairID,omitempty"`
	NetChairID           int32    `protobuf:"varint,5,opt,name=NetChairID,proto3" json:"NetChairID,omitempty"`
	IsZai                bool     `protobuf:"varint,6,opt,name=IsZai,proto3" json:"IsZai,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game_S_UserJetton) Reset()         { *m = Game_S_UserJetton{} }
func (m *Game_S_UserJetton) String() string { return proto.CompactTextString(m) }
func (*Game_S_UserJetton) ProtoMessage()    {}
func (*Game_S_UserJetton) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{19}
}

func (m *Game_S_UserJetton) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_S_UserJetton.Unmarshal(m, b)
}
func (m *Game_S_UserJetton) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_S_UserJetton.Marshal(b, m, deterministic)
}
func (m *Game_S_UserJetton) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_S_UserJetton.Merge(m, src)
}
func (m *Game_S_UserJetton) XXX_Size() int {
	return xxx_messageInfo_Game_S_UserJetton.Size(m)
}
func (m *Game_S_UserJetton) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_S_UserJetton.DiscardUnknown(m)
}

var xxx_messageInfo_Game_S_UserJetton proto.InternalMessageInfo

func (m *Game_S_UserJetton) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *Game_S_UserJetton) GetMultiple() int32 {
	if m != nil {
		return m.Multiple
	}
	return 0
}

func (m *Game_S_UserJetton) GetPoint() int32 {
	if m != nil {
		return m.Point
	}
	return 0
}

func (m *Game_S_UserJetton) GetChairID() int32 {
	if m != nil {
		return m.ChairID
	}
	return 0
}

func (m *Game_S_UserJetton) GetNetChairID() int32 {
	if m != nil {
		return m.NetChairID
	}
	return 0
}

func (m *Game_S_UserJetton) GetIsZai() bool {
	if m != nil {
		return m.IsZai
	}
	return false
}

//弃牌通知
type Game_S_UserQP struct {
	ChairID              int32    `protobuf:"varint,1,opt,name=ChairID,proto3" json:"ChairID,omitempty"`
	NetChairID           int32    `protobuf:"varint,2,opt,name=NetChairID,proto3" json:"NetChairID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game_S_UserQP) Reset()         { *m = Game_S_UserQP{} }
func (m *Game_S_UserQP) String() string { return proto.CompactTextString(m) }
func (*Game_S_UserQP) ProtoMessage()    {}
func (*Game_S_UserQP) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{20}
}

func (m *Game_S_UserQP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_S_UserQP.Unmarshal(m, b)
}
func (m *Game_S_UserQP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_S_UserQP.Marshal(b, m, deterministic)
}
func (m *Game_S_UserQP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_S_UserQP.Merge(m, src)
}
func (m *Game_S_UserQP) XXX_Size() int {
	return xxx_messageInfo_Game_S_UserQP.Size(m)
}
func (m *Game_S_UserQP) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_S_UserQP.DiscardUnknown(m)
}

var xxx_messageInfo_Game_S_UserQP proto.InternalMessageInfo

func (m *Game_S_UserQP) GetChairID() int32 {
	if m != nil {
		return m.ChairID
	}
	return 0
}

func (m *Game_S_UserQP) GetNetChairID() int32 {
	if m != nil {
		return m.NetChairID
	}
	return 0
}

//开牌通知
type Game_S_UserKP struct {
	ChairID              int32    `protobuf:"varint,1,opt,name=ChairID,proto3" json:"ChairID,omitempty"`
	NetChairID           int32    `protobuf:"varint,3,opt,name=NetChairID,proto3" json:"NetChairID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game_S_UserKP) Reset()         { *m = Game_S_UserKP{} }
func (m *Game_S_UserKP) String() string { return proto.CompactTextString(m) }
func (*Game_S_UserKP) ProtoMessage()    {}
func (*Game_S_UserKP) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{21}
}

func (m *Game_S_UserKP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_S_UserKP.Unmarshal(m, b)
}
func (m *Game_S_UserKP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_S_UserKP.Marshal(b, m, deterministic)
}
func (m *Game_S_UserKP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_S_UserKP.Merge(m, src)
}
func (m *Game_S_UserKP) XXX_Size() int {
	return xxx_messageInfo_Game_S_UserKP.Size(m)
}
func (m *Game_S_UserKP) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_S_UserKP.DiscardUnknown(m)
}

var xxx_messageInfo_Game_S_UserKP proto.InternalMessageInfo

func (m *Game_S_UserKP) GetChairID() int32 {
	if m != nil {
		return m.ChairID
	}
	return 0
}

func (m *Game_S_UserKP) GetNetChairID() int32 {
	if m != nil {
		return m.NetChairID
	}
	return 0
}

//空闲场景
type Game_S_FreeScene struct {
	SceneStartTime       int64          `protobuf:"zigzag64,1,opt,name=SceneStartTime,proto3" json:"SceneStartTime,omitempty"`
	UserChairID          int32          `protobuf:"varint,2,opt,name=UserChairID,proto3" json:"UserChairID,omitempty"`
	UserList             []*Game_S_User `protobuf:"bytes,3,rep,name=UserList,proto3" json:"UserList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Game_S_FreeScene) Reset()         { *m = Game_S_FreeScene{} }
func (m *Game_S_FreeScene) String() string { return proto.CompactTextString(m) }
func (*Game_S_FreeScene) ProtoMessage()    {}
func (*Game_S_FreeScene) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{22}
}

func (m *Game_S_FreeScene) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_S_FreeScene.Unmarshal(m, b)
}
func (m *Game_S_FreeScene) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_S_FreeScene.Marshal(b, m, deterministic)
}
func (m *Game_S_FreeScene) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_S_FreeScene.Merge(m, src)
}
func (m *Game_S_FreeScene) XXX_Size() int {
	return xxx_messageInfo_Game_S_FreeScene.Size(m)
}
func (m *Game_S_FreeScene) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_S_FreeScene.DiscardUnknown(m)
}

var xxx_messageInfo_Game_S_FreeScene proto.InternalMessageInfo

func (m *Game_S_FreeScene) GetSceneStartTime() int64 {
	if m != nil {
		return m.SceneStartTime
	}
	return 0
}

func (m *Game_S_FreeScene) GetUserChairID() int32 {
	if m != nil {
		return m.UserChairID
	}
	return 0
}

func (m *Game_S_FreeScene) GetUserList() []*Game_S_User {
	if m != nil {
		return m.UserList
	}
	return nil
}

//叫骰场景消息
type Game_S_JettonScene struct {
	SceneStartTime       int64                `protobuf:"varint,1,opt,name=SceneStartTime,proto3" json:"SceneStartTime,omitempty"`
	UserChairID          int32                `protobuf:"varint,2,opt,name=UserChairID,proto3" json:"UserChairID,omitempty"`
	UserList             []*Game_S_User       `protobuf:"bytes,3,rep,name=UserList,proto3" json:"UserList,omitempty"`
	LotteryPoker         []int32              `protobuf:"varint,4,rep,packed,name=LotteryPoker,proto3" json:"LotteryPoker,omitempty"`
	CurrentChairID       int32                `protobuf:"varint,5,opt,name=CurrentChairID,proto3" json:"CurrentChairID,omitempty"`
	UserJDList           map[int32]*Game_S_JD `protobuf:"bytes,6,rep,name=UserJDList,proto3" json:"UserJDList,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	UserMultiple         map[int32]int32      `protobuf:"bytes,7,rep,name=UserMultiple,proto3" json:"UserMultiple,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	TableMultiple        int32                `protobuf:"varint,8,opt,name=TableMultiple,proto3" json:"TableMultiple,omitempty"`
	IsReverse            bool                 `protobuf:"varint,9,opt,name=IsReverse,proto3" json:"IsReverse,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Game_S_JettonScene) Reset()         { *m = Game_S_JettonScene{} }
func (m *Game_S_JettonScene) String() string { return proto.CompactTextString(m) }
func (*Game_S_JettonScene) ProtoMessage()    {}
func (*Game_S_JettonScene) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{23}
}

func (m *Game_S_JettonScene) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_S_JettonScene.Unmarshal(m, b)
}
func (m *Game_S_JettonScene) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_S_JettonScene.Marshal(b, m, deterministic)
}
func (m *Game_S_JettonScene) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_S_JettonScene.Merge(m, src)
}
func (m *Game_S_JettonScene) XXX_Size() int {
	return xxx_messageInfo_Game_S_JettonScene.Size(m)
}
func (m *Game_S_JettonScene) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_S_JettonScene.DiscardUnknown(m)
}

var xxx_messageInfo_Game_S_JettonScene proto.InternalMessageInfo

func (m *Game_S_JettonScene) GetSceneStartTime() int64 {
	if m != nil {
		return m.SceneStartTime
	}
	return 0
}

func (m *Game_S_JettonScene) GetUserChairID() int32 {
	if m != nil {
		return m.UserChairID
	}
	return 0
}

func (m *Game_S_JettonScene) GetUserList() []*Game_S_User {
	if m != nil {
		return m.UserList
	}
	return nil
}

func (m *Game_S_JettonScene) GetLotteryPoker() []int32 {
	if m != nil {
		return m.LotteryPoker
	}
	return nil
}

func (m *Game_S_JettonScene) GetCurrentChairID() int32 {
	if m != nil {
		return m.CurrentChairID
	}
	return 0
}

func (m *Game_S_JettonScene) GetUserJDList() map[int32]*Game_S_JD {
	if m != nil {
		return m.UserJDList
	}
	return nil
}

func (m *Game_S_JettonScene) GetUserMultiple() map[int32]int32 {
	if m != nil {
		return m.UserMultiple
	}
	return nil
}

func (m *Game_S_JettonScene) GetTableMultiple() int32 {
	if m != nil {
		return m.TableMultiple
	}
	return 0
}

func (m *Game_S_JettonScene) GetIsReverse() bool {
	if m != nil {
		return m.IsReverse
	}
	return false
}

//劈场景消息
type Game_S_PScene struct {
	SceneStartTime       int64                `protobuf:"varint,1,opt,name=SceneStartTime,proto3" json:"SceneStartTime,omitempty"`
	UserChairID          int32                `protobuf:"varint,2,opt,name=UserChairID,proto3" json:"UserChairID,omitempty"`
	UserList             []*Game_S_User       `protobuf:"bytes,3,rep,name=UserList,proto3" json:"UserList,omitempty"`
	LotteryPoker         []int32              `protobuf:"varint,4,rep,packed,name=LotteryPoker,proto3" json:"LotteryPoker,omitempty"`
	CurrentChairID       int32                `protobuf:"varint,5,opt,name=CurrentChairID,proto3" json:"CurrentChairID,omitempty"`
	UserJDList           map[int32]*Game_S_JD `protobuf:"bytes,6,rep,name=UserJDList,proto3" json:"UserJDList,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	UserMultiple         map[int32]int32      `protobuf:"bytes,7,rep,name=UserMultiple,proto3" json:"UserMultiple,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	TableMultiple        int32                `protobuf:"varint,8,opt,name=TableMultiple,proto3" json:"TableMultiple,omitempty"`
	IsReverse            bool                 `protobuf:"varint,9,opt,name=IsReverse,proto3" json:"IsReverse,omitempty"`
	PChairID             int32                `protobuf:"varint,10,opt,name=PChairID,proto3" json:"PChairID,omitempty"`
	PChairIDs            []int32              `protobuf:"varint,11,rep,packed,name=PChairIDs,proto3" json:"PChairIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Game_S_PScene) Reset()         { *m = Game_S_PScene{} }
func (m *Game_S_PScene) String() string { return proto.CompactTextString(m) }
func (*Game_S_PScene) ProtoMessage()    {}
func (*Game_S_PScene) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{24}
}

func (m *Game_S_PScene) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_S_PScene.Unmarshal(m, b)
}
func (m *Game_S_PScene) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_S_PScene.Marshal(b, m, deterministic)
}
func (m *Game_S_PScene) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_S_PScene.Merge(m, src)
}
func (m *Game_S_PScene) XXX_Size() int {
	return xxx_messageInfo_Game_S_PScene.Size(m)
}
func (m *Game_S_PScene) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_S_PScene.DiscardUnknown(m)
}

var xxx_messageInfo_Game_S_PScene proto.InternalMessageInfo

func (m *Game_S_PScene) GetSceneStartTime() int64 {
	if m != nil {
		return m.SceneStartTime
	}
	return 0
}

func (m *Game_S_PScene) GetUserChairID() int32 {
	if m != nil {
		return m.UserChairID
	}
	return 0
}

func (m *Game_S_PScene) GetUserList() []*Game_S_User {
	if m != nil {
		return m.UserList
	}
	return nil
}

func (m *Game_S_PScene) GetLotteryPoker() []int32 {
	if m != nil {
		return m.LotteryPoker
	}
	return nil
}

func (m *Game_S_PScene) GetCurrentChairID() int32 {
	if m != nil {
		return m.CurrentChairID
	}
	return 0
}

func (m *Game_S_PScene) GetUserJDList() map[int32]*Game_S_JD {
	if m != nil {
		return m.UserJDList
	}
	return nil
}

func (m *Game_S_PScene) GetUserMultiple() map[int32]int32 {
	if m != nil {
		return m.UserMultiple
	}
	return nil
}

func (m *Game_S_PScene) GetTableMultiple() int32 {
	if m != nil {
		return m.TableMultiple
	}
	return 0
}

func (m *Game_S_PScene) GetIsReverse() bool {
	if m != nil {
		return m.IsReverse
	}
	return false
}

func (m *Game_S_PScene) GetPChairID() int32 {
	if m != nil {
		return m.PChairID
	}
	return 0
}

func (m *Game_S_PScene) GetPChairIDs() []int32 {
	if m != nil {
		return m.PChairIDs
	}
	return nil
}

//开始游戏
type Game_S_StartTime struct {
	CurrentChairID        int32                          `protobuf:"varint,1,opt,name=CurrentChairID,proto3" json:"CurrentChairID,omitempty"`
	LotteryPokers         map[int32]*Game_S_LotteryPoker `protobuf:"bytes,2,rep,name=LotteryPokers,proto3" json:"LotteryPokers,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	UserListPokerPointNum map[int32]int32                `protobuf:"bytes,3,rep,name=UserListPokerPointNum,proto3" json:"UserListPokerPointNum,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	UserCount             int32                          `protobuf:"varint,4,opt,name=UserCount,proto3" json:"UserCount,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                       `json:"-"`
	XXX_unrecognized      []byte                         `json:"-"`
	XXX_sizecache         int32                          `json:"-"`
}

func (m *Game_S_StartTime) Reset()         { *m = Game_S_StartTime{} }
func (m *Game_S_StartTime) String() string { return proto.CompactTextString(m) }
func (*Game_S_StartTime) ProtoMessage()    {}
func (*Game_S_StartTime) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{25}
}

func (m *Game_S_StartTime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_S_StartTime.Unmarshal(m, b)
}
func (m *Game_S_StartTime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_S_StartTime.Marshal(b, m, deterministic)
}
func (m *Game_S_StartTime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_S_StartTime.Merge(m, src)
}
func (m *Game_S_StartTime) XXX_Size() int {
	return xxx_messageInfo_Game_S_StartTime.Size(m)
}
func (m *Game_S_StartTime) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_S_StartTime.DiscardUnknown(m)
}

var xxx_messageInfo_Game_S_StartTime proto.InternalMessageInfo

func (m *Game_S_StartTime) GetCurrentChairID() int32 {
	if m != nil {
		return m.CurrentChairID
	}
	return 0
}

func (m *Game_S_StartTime) GetLotteryPokers() map[int32]*Game_S_LotteryPoker {
	if m != nil {
		return m.LotteryPokers
	}
	return nil
}

func (m *Game_S_StartTime) GetUserListPokerPointNum() map[int32]int32 {
	if m != nil {
		return m.UserListPokerPointNum
	}
	return nil
}

func (m *Game_S_StartTime) GetUserCount() int32 {
	if m != nil {
		return m.UserCount
	}
	return 0
}

// 骰子
type Game_S_LotteryPoker struct {
	LotteryPoker         []int32  `protobuf:"varint,1,rep,packed,name=LotteryPoker,proto3" json:"LotteryPoker,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Game_S_LotteryPoker) Reset()         { *m = Game_S_LotteryPoker{} }
func (m *Game_S_LotteryPoker) String() string { return proto.CompactTextString(m) }
func (*Game_S_LotteryPoker) ProtoMessage()    {}
func (*Game_S_LotteryPoker) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{26}
}

func (m *Game_S_LotteryPoker) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_S_LotteryPoker.Unmarshal(m, b)
}
func (m *Game_S_LotteryPoker) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_S_LotteryPoker.Marshal(b, m, deterministic)
}
func (m *Game_S_LotteryPoker) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_S_LotteryPoker.Merge(m, src)
}
func (m *Game_S_LotteryPoker) XXX_Size() int {
	return xxx_messageInfo_Game_S_LotteryPoker.Size(m)
}
func (m *Game_S_LotteryPoker) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_S_LotteryPoker.DiscardUnknown(m)
}

var xxx_messageInfo_Game_S_LotteryPoker proto.InternalMessageInfo

func (m *Game_S_LotteryPoker) GetLotteryPoker() []int32 {
	if m != nil {
		return m.LotteryPoker
	}
	return nil
}

//结束游戏消息
type Game_S_GameConclude struct {
	WinChairID           []int32                        `protobuf:"varint,1,rep,packed,name=WinChairID,proto3" json:"WinChairID,omitempty"`
	UserCellScore        map[int32]int32                `protobuf:"bytes,2,rep,name=UserCellScore,proto3" json:"UserCellScore,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	LotteryPokers        map[int32]*Game_S_LotteryPoker `protobuf:"bytes,3,rep,name=LotteryPokers,proto3" json:"LotteryPokers,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	UserListLoss         map[int32]float32              `protobuf:"bytes,4,rep,name=UserListLoss,proto3" json:"UserListLoss,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	UserListMoney        map[int32]float32              `protobuf:"bytes,5,rep,name=UserListMoney,proto3" json:"UserListMoney,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	TableMultiple        int32                          `protobuf:"varint,6,opt,name=TableMultiple,proto3" json:"TableMultiple,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *Game_S_GameConclude) Reset()         { *m = Game_S_GameConclude{} }
func (m *Game_S_GameConclude) String() string { return proto.CompactTextString(m) }
func (*Game_S_GameConclude) ProtoMessage()    {}
func (*Game_S_GameConclude) Descriptor() ([]byte, []int) {
	return fileDescriptor_a090769f8e2c12a2, []int{27}
}

func (m *Game_S_GameConclude) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game_S_GameConclude.Unmarshal(m, b)
}
func (m *Game_S_GameConclude) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game_S_GameConclude.Marshal(b, m, deterministic)
}
func (m *Game_S_GameConclude) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game_S_GameConclude.Merge(m, src)
}
func (m *Game_S_GameConclude) XXX_Size() int {
	return xxx_messageInfo_Game_S_GameConclude.Size(m)
}
func (m *Game_S_GameConclude) XXX_DiscardUnknown() {
	xxx_messageInfo_Game_S_GameConclude.DiscardUnknown(m)
}

var xxx_messageInfo_Game_S_GameConclude proto.InternalMessageInfo

func (m *Game_S_GameConclude) GetWinChairID() []int32 {
	if m != nil {
		return m.WinChairID
	}
	return nil
}

func (m *Game_S_GameConclude) GetUserCellScore() map[int32]int32 {
	if m != nil {
		return m.UserCellScore
	}
	return nil
}

func (m *Game_S_GameConclude) GetLotteryPokers() map[int32]*Game_S_LotteryPoker {
	if m != nil {
		return m.LotteryPokers
	}
	return nil
}

func (m *Game_S_GameConclude) GetUserListLoss() map[int32]float32 {
	if m != nil {
		return m.UserListLoss
	}
	return nil
}

func (m *Game_S_GameConclude) GetUserListMoney() map[int32]float32 {
	if m != nil {
		return m.UserListMoney
	}
	return nil
}

func (m *Game_S_GameConclude) GetTableMultiple() int32 {
	if m != nil {
		return m.TableMultiple
	}
	return 0
}

func init() {
	proto.RegisterType((*Game_C_TokenLogin)(nil), "msg.Game_C_TokenLogin")
	proto.RegisterType((*Game_C_RobotLogin)(nil), "msg.Game_C_RobotLogin")
	proto.RegisterType((*Game_C_UserSitDown)(nil), "msg.Game_C_UserSitDown")
	proto.RegisterType((*Game_C_UserStandUp)(nil), "msg.Game_C_UserStandUp")
	proto.RegisterType((*Game_C_UserHP)(nil), "msg.Game_C_UserHP")
	proto.RegisterType((*Game_C_UserKP)(nil), "msg.Game_C_UserKP")
	proto.RegisterType((*Game_C_UserP)(nil), "msg.Game_C_UserP")
	proto.RegisterType((*Game_C_UserFP)(nil), "msg.Game_C_UserFP")
	proto.RegisterType((*Game_C_UserQP)(nil), "msg.Game_C_UserQP")
	proto.RegisterType((*Game_S_User)(nil), "msg.Game_S_User")
	proto.RegisterType((*Game_S_JD)(nil), "msg.Game_S_JD")
	proto.RegisterType((*Game_S_ReqlyFail)(nil), "msg.Game_S_ReqlyFail")
	proto.RegisterType((*Game_S_LoginSuccess)(nil), "msg.Game_S_LoginSuccess")
	proto.RegisterType((*Game_S_SitDownNotify)(nil), "msg.Game_S_SitDownNotify")
	proto.RegisterType((*Game_S_StandUpNotify)(nil), "msg.Game_S_StandUpNotify")
	proto.RegisterType((*Game_S_OffLineNotify)(nil), "msg.Game_S_OffLineNotify")
	proto.RegisterType((*Game_S_OnLineNotify)(nil), "msg.Game_S_OnLineNotify")
	proto.RegisterType((*Game_S_PNotify)(nil), "msg.Game_S_PNotify")
	proto.RegisterType((*Game_S_FPNotify)(nil), "msg.Game_S_FPNotify")
	proto.RegisterType((*Game_S_UserJetton)(nil), "msg.Game_S_UserJetton")
	proto.RegisterType((*Game_S_UserQP)(nil), "msg.Game_S_UserQP")
	proto.RegisterType((*Game_S_UserKP)(nil), "msg.Game_S_UserKP")
	proto.RegisterType((*Game_S_FreeScene)(nil), "msg.Game_S_FreeScene")
	proto.RegisterType((*Game_S_JettonScene)(nil), "msg.Game_S_JettonScene")
	proto.RegisterMapType((map[int32]*Game_S_JD)(nil), "msg.Game_S_JettonScene.UserJDListEntry")
	proto.RegisterMapType((map[int32]int32)(nil), "msg.Game_S_JettonScene.UserMultipleEntry")
	proto.RegisterType((*Game_S_PScene)(nil), "msg.Game_S_PScene")
	proto.RegisterMapType((map[int32]*Game_S_JD)(nil), "msg.Game_S_PScene.UserJDListEntry")
	proto.RegisterMapType((map[int32]int32)(nil), "msg.Game_S_PScene.UserMultipleEntry")
	proto.RegisterType((*Game_S_StartTime)(nil), "msg.Game_S_StartTime")
	proto.RegisterMapType((map[int32]*Game_S_LotteryPoker)(nil), "msg.Game_S_StartTime.LotteryPokersEntry")
	proto.RegisterMapType((map[int32]int32)(nil), "msg.Game_S_StartTime.UserListPokerPointNumEntry")
	proto.RegisterType((*Game_S_LotteryPoker)(nil), "msg.Game_S_LotteryPoker")
	proto.RegisterType((*Game_S_GameConclude)(nil), "msg.Game_S_GameConclude")
	proto.RegisterMapType((map[int32]*Game_S_LotteryPoker)(nil), "msg.Game_S_GameConclude.LotteryPokersEntry")
	proto.RegisterMapType((map[int32]int32)(nil), "msg.Game_S_GameConclude.UserCellScoreEntry")
	proto.RegisterMapType((map[int32]float32)(nil), "msg.Game_S_GameConclude.UserListLossEntry")
	proto.RegisterMapType((map[int32]float32)(nil), "msg.Game_S_GameConclude.UserListMoneyEntry")
}

func init() { proto.RegisterFile("msg/cmd.proto", fileDescriptor_a090769f8e2c12a2) }

var fileDescriptor_a090769f8e2c12a2 = []byte{
	// 1229 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x58, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0x96, 0xe3, 0xa4, 0xdb, 0x9c, 0x34, 0xdd, 0xdd, 0xa1, 0x20, 0x2b, 0x5a, 0xa1, 0xca, 0xaa,
	0xa0, 0x0b, 0x28, 0xbb, 0x2a, 0x37, 0x80, 0x90, 0x80, 0x6d, 0x9a, 0x36, 0xbb, 0x49, 0xea, 0x75,
	0x5a, 0x21, 0xf5, 0xa6, 0x72, 0x93, 0x69, 0x6a, 0xd5, 0xf6, 0x94, 0xf1, 0x64, 0x51, 0x78, 0x03,
	0xb8, 0xe7, 0x11, 0xb8, 0xe0, 0x05, 0x78, 0x02, 0x78, 0x1e, 0x5e, 0x01, 0xcd, 0x8f, 0xed, 0x99,
	0xfc, 0x34, 0x2d, 0x52, 0x25, 0xc4, 0x9d, 0xcf, 0x37, 0x73, 0xbe, 0x39, 0x73, 0xce, 0x77, 0x8e,
	0x9d, 0x40, 0x3d, 0x4e, 0xc7, 0x2f, 0x86, 0xf1, 0xa8, 0x79, 0x43, 0x09, 0x23, 0xc8, 0x8e, 0xd3,
	0xb1, 0x7b, 0x08, 0x4f, 0x0f, 0x83, 0x18, 0x9f, 0xef, 0x9f, 0x9f, 0x90, 0x6b, 0x9c, 0x74, 0xc9,
	0x38, 0x4c, 0xd0, 0x16, 0x54, 0x84, 0xe5, 0x58, 0xdb, 0xd6, 0x6e, 0xd5, 0x97, 0x06, 0x7a, 0x06,
	0xd5, 0x5e, 0x30, 0xbc, 0x0a, 0x13, 0xdc, 0x69, 0x39, 0x25, 0xb1, 0x52, 0x00, 0xee, 0x41, 0x4e,
	0xe4, 0x93, 0x0b, 0xc2, 0x24, 0xd1, 0x07, 0xb0, 0x76, 0x9a, 0x62, 0xda, 0x69, 0x09, 0xa6, 0x8a,
	0xaf, 0x2c, 0xe4, 0xc0, 0xa3, 0x57, 0x01, 0x1b, 0x5e, 0x29, 0xa2, 0x8a, 0x9f, 0x99, 0xee, 0x11,
	0x20, 0x45, 0xc3, 0xb7, 0x0e, 0x42, 0xd6, 0x22, 0x3f, 0x26, 0x7c, 0xff, 0x49, 0x70, 0x11, 0xe1,
	0x9c, 0x28, 0x33, 0xf9, 0xca, 0xfe, 0x55, 0x10, 0xd2, 0x82, 0x49, 0x99, 0xee, 0x96, 0xc9, 0xc4,
	0x82, 0x64, 0x74, 0x7a, 0xe3, 0xfe, 0x66, 0x41, 0x5d, 0x83, 0x8f, 0x3c, 0x84, 0xa0, 0x7c, 0x32,
	0xbd, 0xc1, 0x8a, 0x58, 0x3c, 0x2f, 0x67, 0x45, 0x0d, 0x58, 0xef, 0x4d, 0x22, 0x16, 0xde, 0x44,
	0xd8, 0xb1, 0xc5, 0x52, 0x6e, 0xf3, 0xb4, 0x79, 0x24, 0x4c, 0x98, 0x53, 0x16, 0x0b, 0xd2, 0x40,
	0x1f, 0x02, 0xf4, 0x31, 0xcb, 0xe8, 0x2a, 0x62, 0x49, 0x43, 0xb8, 0x57, 0x27, 0x3d, 0x0b, 0x42,
	0x67, 0x6d, 0xdb, 0xda, 0x5d, 0xf7, 0xa5, 0xe1, 0x3e, 0x36, 0xc2, 0x7c, 0xe3, 0xb9, 0xbb, 0xb0,
	0xa1, 0x01, 0x9e, 0x1e, 0xa2, 0xb5, 0x6d, 0xeb, 0x17, 0x7f, 0x6e, 0xb8, 0xb6, 0x67, 0xb6, 0x1a,
	0x39, 0x32, 0x4f, 0x79, 0xeb, 0xb9, 0xbf, 0xda, 0x50, 0x13, 0xc8, 0x40, 0x20, 0x4b, 0x0b, 0xd8,
	0x80, 0xf5, 0x7e, 0x78, 0x8d, 0xfb, 0x41, 0x8c, 0x95, 0x14, 0x72, 0x9b, 0xaf, 0xf1, 0x5d, 0x87,
	0x24, 0x1a, 0x89, 0x14, 0x95, 0xfc, 0xdc, 0x46, 0xdb, 0x50, 0xe3, 0xcf, 0xad, 0x30, 0x88, 0x49,
	0x32, 0x12, 0x89, 0x2a, 0xf9, 0x3a, 0xc4, 0x77, 0xf4, 0x70, 0x7c, 0x81, 0xe9, 0x31, 0x1d, 0x61,
	0xaa, 0xf2, 0xa5, 0x43, 0xc8, 0x85, 0x8d, 0x23, 0x1c, 0x8c, 0x3a, 0x71, 0x30, 0xc6, 0xa7, 0x34,
	0x12, 0x79, 0xab, 0xfa, 0x06, 0xc6, 0xe3, 0x6e, 0x07, 0x43, 0xae, 0x97, 0x47, 0x32, 0x6e, 0x69,
	0x71, 0xdc, 0x27, 0x42, 0x47, 0xeb, 0x12, 0x97, 0x16, 0xc7, 0x07, 0x93, 0x90, 0x75, 0x5a, 0x4e,
	0x55, 0xe2, 0xd2, 0xe2, 0x67, 0x79, 0x57, 0x84, 0x91, 0x36, 0x0d, 0x62, 0xee, 0x05, 0x62, 0xd5,
	0xc0, 0x74, 0x71, 0xd6, 0x96, 0x8a, 0x73, 0xc3, 0x94, 0x11, 0x3f, 0x8f, 0x05, 0x6c, 0x92, 0x3a,
	0x75, 0x75, 0x9e, 0xb0, 0x38, 0x7e, 0x88, 0x13, 0x7e, 0xf1, 0x4d, 0x89, 0x4b, 0xcb, 0x1d, 0x40,
	0x55, 0x95, 0xe5, 0xb5, 0xa9, 0x41, 0x6b, 0x99, 0x06, 0x4b, 0xba, 0x06, 0x73, 0x8d, 0xd9, 0xba,
	0xc6, 0xba, 0xf0, 0x44, 0x91, 0xfa, 0xf8, 0x87, 0x68, 0xda, 0x0e, 0xc2, 0x88, 0x37, 0xf9, 0x01,
	0xa5, 0x84, 0xee, 0x93, 0x51, 0x46, 0x5e, 0x00, 0xfc, 0x64, 0x61, 0xf4, 0xd2, 0x71, 0x56, 0xf6,
	0xcc, 0x76, 0x7f, 0xb6, 0xe0, 0x3d, 0x45, 0x27, 0x9a, 0x7f, 0x30, 0x19, 0x0e, 0x71, 0x9a, 0x72,
	0xfd, 0x73, 0xf8, 0xec, 0xe2, 0x24, 0x8c, 0x33, 0x4a, 0x0d, 0xc9, 0xd6, 0xf7, 0x7f, 0x12, 0xeb,
	0xa5, 0x62, 0x5d, 0x22, 0xb7, 0x76, 0x5c, 0x91, 0xc6, 0xb2, 0x9e, 0x46, 0xf7, 0x6b, 0xd8, 0x52,
	0xa1, 0xa8, 0x09, 0xd2, 0x27, 0x2c, 0xbc, 0x9c, 0xa2, 0x1d, 0x28, 0xb7, 0x02, 0x16, 0x88, 0x28,
	0x6a, 0x7b, 0x4f, 0x9a, 0x71, 0x3a, 0x6e, 0x6a, 0x72, 0xf7, 0xc5, 0xaa, 0xfb, 0xb2, 0xf0, 0x96,
	0x53, 0x43, 0x79, 0x2f, 0xef, 0xa3, 0xc2, 0xe3, 0xf8, 0xf2, 0xb2, 0x1b, 0x26, 0x78, 0xa5, 0xc7,
	0x8b, 0x3c, 0x59, 0xc7, 0xc9, 0x9d, 0x1c, 0x22, 0xd8, 0x54, 0x0e, 0xde, 0xaa, 0xbd, 0x33, 0x23,
	0xa7, 0x34, 0x37, 0x72, 0xb6, 0xa1, 0xe6, 0x89, 0xe7, 0xef, 0x28, 0x0d, 0xa6, 0x8e, 0x2d, 0xe6,
	0x87, 0x0e, 0xb9, 0xc7, 0xf0, 0x58, 0x9d, 0xd6, 0xce, 0x8e, 0x7b, 0x06, 0xd5, 0xf6, 0x8d, 0x79,
	0x60, 0x01, 0xac, 0x3a, 0xd2, 0xfd, 0xdd, 0x52, 0xef, 0x07, 0x99, 0xe9, 0xd7, 0x98, 0x31, 0x92,
	0x2c, 0x9c, 0xbd, 0x7a, 0xbd, 0x4b, 0xcb, 0xd4, 0x6d, 0xeb, 0xea, 0xd6, 0x12, 0x51, 0xbe, 0x2d,
	0x11, 0x77, 0x9d, 0xbd, 0x1d, 0x35, 0x15, 0x07, 0x6a, 0x2a, 0xfe, 0xfb, 0x4c, 0xcf, 0x50, 0xbd,
	0xb9, 0x3b, 0x95, 0x3d, 0x47, 0xf5, 0x8b, 0x95, 0xb7, 0x6b, 0x9b, 0x62, 0x3c, 0x18, 0xe2, 0x04,
	0xa3, 0x8f, 0x60, 0x53, 0x3c, 0x0c, 0x58, 0x40, 0x59, 0xde, 0x60, 0xc8, 0x9f, 0x41, 0xb3, 0xb9,
	0x6b, 0x06, 0xaa, 0x43, 0xe8, 0x33, 0x39, 0xb5, 0xbb, 0x61, 0xca, 0x84, 0x20, 0x16, 0xb5, 0x47,
	0xbe, 0xc3, 0xfd, 0xb3, 0xac, 0xde, 0xae, 0x83, 0x73, 0x59, 0xca, 0xdb, 0xc2, 0xb1, 0x1f, 0x3a,
	0x1c, 0x3e, 0xa6, 0xbb, 0x84, 0x31, 0x4c, 0xa7, 0x1e, 0xb9, 0xc6, 0xd4, 0x29, 0x0b, 0x45, 0x1b,
	0x18, 0x8f, 0x6d, 0x7f, 0x42, 0x29, 0x4e, 0x66, 0xf4, 0x30, 0x83, 0xa2, 0x43, 0x00, 0xa1, 0xd0,
	0x96, 0x38, 0x7b, 0x4d, 0x9c, 0xfd, 0xb1, 0x7e, 0xb6, 0x76, 0xe1, 0x66, 0xb1, 0xf3, 0x20, 0x61,
	0x74, 0xea, 0x6b, 0xae, 0xa8, 0x07, 0x1b, 0xdc, 0xca, 0xc5, 0xfc, 0x48, 0x50, 0x3d, 0xbf, 0x8d,
	0x2a, 0xdb, 0x2b, 0xc9, 0x0c, 0x77, 0xb4, 0x03, 0x75, 0xf1, 0x5e, 0xc9, 0xf9, 0xe4, 0x1b, 0xcc,
	0x04, 0x79, 0x97, 0x76, 0x52, 0x1f, 0xbf, 0xc3, 0x34, 0xc5, 0xe2, 0x5d, 0xb6, 0xee, 0x17, 0x40,
	0xa3, 0x07, 0x8f, 0x67, 0x22, 0x46, 0x4f, 0xc0, 0xbe, 0xc6, 0x53, 0x25, 0x46, 0xfe, 0x88, 0x76,
	0xa0, 0xf2, 0x2e, 0x88, 0x26, 0xb2, 0xfb, 0x6a, 0x7b, 0x9b, 0x46, 0xc0, 0x2d, 0x5f, 0x2e, 0x7e,
	0x55, 0xfa, 0xc2, 0x6a, 0x7c, 0x03, 0x4f, 0xe7, 0xa2, 0x5e, 0x40, 0xb8, 0xa5, 0x13, 0x56, 0x34,
	0x02, 0xf7, 0xef, 0x72, 0xde, 0x1f, 0xde, 0xff, 0x47, 0x41, 0xaf, 0x16, 0x28, 0xc8, 0xd5, 0xcf,
	0xf6, 0x56, 0x8b, 0xe7, 0x68, 0xa1, 0x78, 0x76, 0x96, 0xb0, 0x3c, 0xb0, 0x6e, 0xf8, 0x4c, 0xf6,
	0xb2, 0x3b, 0xcb, 0x4f, 0xa0, 0xdc, 0xe6, 0x9e, 0xd9, 0x73, 0xea, 0xd4, 0x44, 0xda, 0x0a, 0xe0,
	0x3f, 0xa7, 0xb8, 0x3f, 0xec, 0x7c, 0x8a, 0x16, 0x62, 0x9a, 0x2f, 0xac, 0xb5, 0xb0, 0xb0, 0x7d,
	0xa8, 0xeb, 0x82, 0x48, 0x9d, 0x92, 0xa8, 0xca, 0xae, 0x1e, 0x6f, 0xce, 0xda, 0x34, 0xb6, 0xca,
	0xca, 0x98, 0xee, 0xe8, 0x12, 0xde, 0xcf, 0x04, 0x28, 0x10, 0xf1, 0x3a, 0xeb, 0x4f, 0x62, 0xa5,
	0xd7, 0x97, 0x8b, 0x79, 0x17, 0xba, 0x48, 0xfe, 0xc5, 0x74, 0xbc, 0x44, 0xa2, 0x33, 0xc8, 0x24,
	0xff, 0x71, 0x52, 0x00, 0x8d, 0x33, 0x40, 0xf3, 0xa1, 0x2e, 0x48, 0x6a, 0xd3, 0xac, 0x92, 0xa3,
	0x47, 0xa7, 0x13, 0xe8, 0xf5, 0x3a, 0x82, 0xc6, 0xf2, 0x70, 0xef, 0x55, 0xb8, 0x2f, 0xb5, 0xaf,
	0x4b, 0xad, 0x27, 0x67, 0xfb, 0xd6, 0x9a, 0xef, 0x5b, 0xf7, 0xaf, 0x4a, 0xee, 0x2b, 0xbe, 0x2b,
	0x49, 0x32, 0x8c, 0x26, 0x23, 0xf1, 0xe5, 0xf9, 0x7d, 0x98, 0x98, 0xbf, 0xa2, 0x34, 0x04, 0xbd,
	0x85, 0xba, 0xc8, 0x12, 0x8e, 0xa2, 0xc1, 0x90, 0x50, 0xac, 0xca, 0xfd, 0xa9, 0x7e, 0x71, 0x9d,
	0xb0, 0x69, 0xec, 0x56, 0x15, 0x37, 0x30, 0x4e, 0x69, 0x2a, 0xc8, 0x5e, 0x41, 0xb9, 0x5a, 0x44,
	0x7d, 0x39, 0x29, 0x78, 0x8a, 0xbb, 0x24, 0x4d, 0xc5, 0xe4, 0xaa, 0xed, 0x7d, 0x72, 0x6b, 0x90,
	0xd9, 0x66, 0x6d, 0x5e, 0x64, 0x50, 0x76, 0x6b, 0x6e, 0xf7, 0x48, 0x82, 0xa7, 0x4e, 0xe5, 0x0e,
	0xb7, 0xce, 0x77, 0x6b, 0xb7, 0xce, 0xb1, 0xf9, 0x11, 0xb4, 0xb6, 0x60, 0x04, 0x35, 0xbe, 0x05,
	0x34, 0x9f, 0xc0, 0xfb, 0x68, 0xe4, 0x41, 0x95, 0xac, 0x26, 0x8f, 0x91, 0xb9, 0x55, 0xc1, 0x95,
	0x74, 0x02, 0x75, 0x3d, 0x33, 0x53, 0xf7, 0x61, 0xb8, 0x58, 0x13, 0xff, 0xdb, 0x7c, 0xfe, 0x4f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x33, 0xf2, 0x0f, 0x16, 0xc8, 0x11, 0x00, 0x00,
}
