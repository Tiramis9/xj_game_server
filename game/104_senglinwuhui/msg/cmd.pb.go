// Code generated by protoc-gen-go. DO NOT EDIT.
// source: msg/cmd.proto

package msg

//token登陆消息
type Game_C_LoginDown struct {
	Token     string `json:"token"`
	MachineID string `json:"machine_id"`
}

//用户下注
type Game_C_UserJetton struct {
	JettonArea  int32   `json:"area"`
	JettonScore float32 `json:"money"`
}

//请求失败
type Game_S_ReqlyFail struct {
	ErrorCode int32  `json:"errno"`
	ErrorMsg  string `json:"errmsg"`
}

//登陆成功
type Game_S_LoginSuccess struct {
	GameJettonTime  int32     `json:"bet_round_time"`  // 下注环节时间
	GameLotteryTime int32     `json:"show_round_time"` // 开奖环节时间
	JettonList      []float32 `json:"chip_num"`        //筹码选项列表
	Status          int32     `json:"reconnect"`       // 是否重连（0：是/1：不是）
	//新增加两个
	History    []SlwhLottery `json:"history"`     //历史记录最多15个
	RewardRate [12]float32   `json:"reward_rate"` // 赔率，固定12个长度
}

type SlwhLottery struct {
	Special int32 `json:"special"`    //0:普通开奖  1:大三元  2:大四喜  3:森林闪电
	Index   int32 `json:"area_index"` //代表下标
}

//开始游戏消息
type Game_S_GameStart struct {
	//Data    []*Game_S_User `json:"table_user_list"`
	GemList []int32 `json:"gem_list"`
	//RandomColor          []int32        `json:"random_color"`
	//SceneStartTime       int64          `json:"scene_start_time"`
}

// 下注通知
type Game_S_UserJetton struct {
	//ChairID              int32    `json:"chair_id"`
	//JettonArea           int32    `json:"jetton_area"`
	//JettonScore          float32  `json:"jetton_score"`

	//User *Game_S_User `json:"user"`
	Info *JettonInfo `json:"info"`
}

type JettonInfo struct {
	Area  int32   `json:"area"`
	Money float32 `json:"money"`
}

//当前下注状况,每个区域,每个玩家的下注情况
type Game_S_AreaJetton struct {
	UserArraJetton []*Game_C_AreaJetton `json:"info_list"`
}

//结束游戏消息
type Game_S_GameConclude struct {
	//LotteryPoker         int32             `json:"lottery_poker"`
	LotterySpecial int32 `json:"special"` // 特殊开奖 0:普通开奖  1:大三元  2:大四喜  3:森林闪电
	//WinArea              []bool            `json:"win_area"`
	//UserListLoss         map[int32]float32 `json:"user_list_loss"`
	//ColorIndex int32   `json:"color"`  //颜色
	//Animal     int32   `json:"animal"` // 动物

	//History SlwhLottery `json:"history"`
	GemIndex int32 `json:"gem_index"` //宝石下标
	//Special int32 `json:"special"`//0:普通开奖  1:大三元  2:大四喜  3:森林闪电
	AnimalIndex int32   `json:"animal_index"` //动物下标
	Money       float32 `json:"money"`        // 赢取金额，只有赢
	//UserListMoney        map[int32]float32 `json:"user_list_money"`

}

//下注场景消息
type Game_S_JettonScene struct {
	UserArraJetton []*JettonInfo `json:"area_info"`    //区域下注信息
	UserJetton     []*JettonInfo `json:"user_jetton"`  //玩家下注信息
	SceneStartTime float64       `json:"surplus_time"` //剩余时间
	GemList        []int32       `json:"gem_list"`
	//UserChairID          int32                `json:"user_chair_id"`
	//UserList             []*Game_S_User       `json:"user_list"`
	//LotteryRecord        []int32              `json:"lottery_record"`
	//LotterySpecialRecord []int32              `json:"lottery_special_record"`
	//
	//UserCount            int32                `json:"user_count"`
	//RandomColor          []int32              `json:"random_color"`
	//JettonList           []float32            `json:"jetton_list"`
}

//开奖场景消息
type Game_S_ConcludeScene struct {
	UserArraJetton []*JettonInfo       `json:"area_info"`    //区域下注信息
	UserJetton     []*JettonInfo       `json:"user_jetton"`  //玩家下注信息
	Result         Game_S_GameConclude `json:"result"`       // 开奖信息
	SurplusTime    float64             `json:"surplus_time"` // 剩余时间
	GemList        []int32             `json:"gem_list"`
}

//开奖场景消息
type Game_S_LotteryScene struct {
	SceneStartTime       int64                `json:"scene_start_time"`
	UserChairID          int32                `json:"user_chair_id"`
	UserList             []*Game_S_User       `json:"user_list"`
	LotteryRecord        []int32              `json:"lottery_record"`
	LotterySpecialRecord []int32              `json:"lottery_special_record"`
	UserArraJetton       []*Game_C_AreaJetton `json:"user_arra_jetton"`
	LotteryPoker         int32                `json:"lottery_poker"`
	RandomColor          []int32              `json:"random_color"`
	LotterySpecial       int32                `json:"lottery_special"`
	WinArea              []bool               `json:"win_area"`
	UserCount            int32                `json:"user_count"`
	JettonList           []float32            `json:"jetton_list"`
	ColorIndex           int32                `json:"color_index"`
}

////登陆消息
//type Game_C_TokenLogin struct {
//	Token                string   `json:"token"`
//	MachineID            string   `json:"machine_id"`
//}

//机器人登陆
type Game_C_RobotLogin struct {
	UserID  int32 `json:"user_id"`
	BatchID int32 `json:"batch_id"`
}

//用户坐下
type Game_C_UserSitDown struct {
	TableID int32 `json:"table_id"`
	ChairID int32 `json:"chair_id"`
}

//用户起立
type Game_C_UserStandUp struct {
}

//获取用户列表 分页
type Game_C_UserList struct {
	Page int32 `json:"page"`
	Size int32 `json:"size"`
}

//user
type Game_S_User struct {
	UserID      int32   `json:"user_id"`
	NikeName    string  `json:"name"`
	UserGold    float32 `json:"user_gold"`
	UserDiamond float32 `json:"money"`
	//MemberOrder          int32    `json:"member_order"`
	HeadImageUrl string `json:"head_url"`
	//FaceID               int32    `json:"face_id"`
	//RoleID               int32    `json:"role_id"`
	//SuitID               int32    `json:"suit_id"`
	//PhotoFrameID         int32    `json:"photo_frame_id"`
	//TableID              int32    `json:"table_id"`
	ChairID int32 `json:"chair_id"`
	//Status               int32    `json:"status"`
	//Gender               int32    `json:"gender"`
}

// 下注结构体
type Game_C_AreaJetton struct {
	Area   int32   `json:"area"`
	Jetton float32 `json:"money"`
}

//坐下通知消息
type Game_S_SitDownNotify struct {
	UserChairID int32        `json:"user_chair_id"`
	User        *Game_S_User `json:"user"`
}

//起立通知消息
type Game_S_StandUpNotify struct {
	ChairID int32 `json:"chair_id"`
}

//掉线通知消息
type Game_S_OffLineNotify struct {
	ChairID int32 `json:"chair_id"`
}

//上线通知消息
type Game_S_OnLineNotify struct {
	ChairID int32 `json:"chair_id"`
}

// 返回用户列表数据
type Game_S_UserList struct {
	Data []*Game_S_TempUser `json:"data"`
}

type Game_S_TempUser struct {
	User        *Game_S_User `json:"user"`
	TotalJetton float32      `json:"total_jetton"`
	TotalWin    int32        `json:"total_win"`
}
