// Code generated by protoc-gen-go. DO NOT EDIT.
// source: msg/cmd.proto

package msg

//登陆消息
type Game_C_TokenLogin struct {
	Token     string `json:"token"`
	MachineID string `json:"machine_id"`
}

//用户下注
type Game_C_UserJetton struct {
	Area  int32   `json:"area"`
	Money float32 `json:"money"`
}

//请求失败
type Game_S_ReqlyFail struct {
	ErrorCode int32  `json:"errno"`
	ErrorMsg  string `json:"errmsg"`
}

//登陆成功
type Game_S_LoginSuccess struct {
	Reconnect     int32     `json:"reconnect"` //是否重连（0：是/1：不是）
	BetRoundTime  int32     `json:"bet_round_time"`
	ShowRoundTime int32     `json:"show_round_time"`
	History       []int32   `json:"history"`
	ChipNum       []float32 `json:"chip_num"`
}

//开始游戏消息
type Game_S_GameStart struct {
}

// 下注通知
type Game_S_UserJetton struct {
	Info JettonInfoResp `json:"info"`
	//Info *[]JettonInfoResp `json:"info"`
}

type JettonInfoResp struct {
	Area  int32   `json:"area"`
	Money float32 `json:"money"`
}

//当前下注状况,每个区域,每个玩家的下注情况
type Game_S_AreaJetton struct {
	InfoList []*JettonInfoResp `json:"info_list"`
}

//结束游戏消息
type Game_S_GameConclude struct {
	Index int32   `json:"index"`
	Area  int32   `json:"area"`
	Money float32 `json:"money"`
}

//下注场景消息
type Game_S_JettonScene struct {
	JettonInfo  Game_S_AreaJetton `json:"jetton_info"`
	AreaInfo    Game_S_AreaJetton `json:"area_info"`
	SurplusTime float64           `json:"surplus_time"`
	RecordID    string            `json:"record_id"` // 局号
}

/// <summary>
/// 开奖场景（已结束）
/// </summary>
//public class Game_S_ConcludeScene
//{
/// <summary>
/// 玩家下注信息
/// </summary>
//public Game_S_AreaJetton jetton_info;
/// <summary>
/// 区域下注信息
/// </summary>
//public Game_S_AreaJetton area_info;
/// <summary>
/// 开奖信息
/// </summary>
//public Game_S_GameConclude result;
/// <summary>
/// 剩余时间
/// </summary>
//public double surplus_time;
//}
/// 开奖场景（已结束）
type Game_S_ConcludeScene struct {
	JettonInfo  Game_S_AreaJetton   `json:"jetton_info"`
	AreaInfo    Game_S_AreaJetton   `json:"area_info"`
	Result      Game_S_GameConclude `json:"result"`
	SurplusTime float64             `json:"surplus_time"`
}

//新的结构体

//登陆并且坐下
type Game_C_LoginDown struct {
	Token     string `json:"token"`
	MachineID string `json:"machine_id"`
	TableID   int32  `json:"table_id"`
	ChairID   int32  `json:"chair_id"`
}

//机器人登陆
type Game_C_RobotLogin struct {
	UserID  int32 `json:"user_id"`
	BatchID int32 `json:"batch_id"`
}

//用户坐下
type Game_C_UserSitDown struct {
	TableID int32 `json:"table_id"`
	ChairID int32 `json:"chair_id"`
}

//用户起立
type Game_C_UserStandUp struct {
}

//获取用户列表 分页
type Game_C_UserList struct {
	Page int32 `json:"page"`
	Size int32 `json:"size"`
}

//user
type Game_S_User struct {
	UserID       int32   `json:"user_id"`
	NikeName     string  `json:"nike_name"`
	UserGold     float32 `json:"user_gold"`
	UserDiamond  float32 `json:"user_diamond"`
	MemberOrder  int32   `json:"member_order"`
	HeadImageUrl string  `json:"head_image_url"`
	FaceID       int32   `json:"face_id"`
	RoleID       int32   `json:"role_id"`
	SuitID       int32   `json:"suit_id"`
	PhotoFrameID int32   `json:"photo_frame_id"`
	TableID      int32   `json:"table_id"`
	ChairID      int32   `json:"chair_id"`
	Status       int32   `json:"status"`
	Gender       int32   `json:"gender"`
}

// 下注结构体
type Game_C_AreaJetton struct {
	Area   int32   `json:"area"`
	Jetton float32 `json:"jetton"`
}

//游戏结束大厅场景消息
type Game_S_Hall struct {
	TableID       int32 `json:"table_id"`
	LotteryRecord int32 `json:"lottery_record"`
	UserCount     int32 `json:"user_count"`
}

//开奖场景消息
type Game_S_LotteryScene struct {
	SceneStartTime  int64                `json:"scene_start_time"`
	UserChairID     int32                `json:"user_chair_id"`
	UserList        []*Game_S_User       `json:"user_list"`
	LotteryRecord   []int32              `json:"lottery_record"`
	UserArraJetton  []*Game_C_AreaJetton `json:"user_arra_jetton"`
	LotteryPoker    int32                `json:"lottery_poker"`
	WinArea         []bool               `json:"win_area"`
	UserCount       int32                `json:"user_count"`
	JettonList      []float32            `json:"jetton_list"`
	LotteryLocation int32                `json:"lottery_location"`
	UserJetton      []*Game_C_AreaJetton `json:"user_jetton"`
}

//坐下通知消息
type Game_S_SitDownNotify struct {
	UserChairID int32        `json:"user_chair_id"`
	User        *Game_S_User `json:"user"`
}

//起立通知消息
type Game_S_StandUpNotify struct {
	ChairID int32 `json:"chair_id"`
}

//掉线通知消息
type Game_S_OffLineNotify struct {
	ChairID int32 `json:"chair_id"`
}

//上线通知消息
type Game_S_OnLineNotify struct {
	ChairID int32 `json:"chair_id"`
}

// 返回用户列表数据
type Game_S_UserList struct {
	Data []*Game_S_TempUser `json:"data"`
}

type Game_S_TempUser struct {
	User        *Game_S_User `json:"user"`
	TotalJetton float32      `json:"total_jetton"`
	TotalWin    int32        `json:"total_win"`
}
