// Code generated by protoc-gen-go. DO NOT EDIT.
// source: msg/cmd.proto

package msg

//登陆消息
type Game_C_TokenLogin struct {
	Token                string   `json:"token"`
	MachineID            string   `json:"machine_id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

//机器人登陆
type Game_C_RobotLogin struct {
	UserID               int32    `json:"user_id"`
	BatchID              int32    `json:"batch_id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

//用户坐下
type Game_C_UserSitDown struct {
	TableID              int32    `json:"table_id"`
	ChairID              int32    `json:"chair_id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

//用户起立
type Game_C_UserStandUp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

//用户出牌
type Game_C_UserOutCard struct {
	MjData               int32    `json:"mj_data"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

type MjData struct {
	MjKey   int32 `json:"mj_key"`
	MjValue int32 `json:"mj_value"`
}

//用户操作
type Game_C_UserOperate struct {
	OperateCode          int32    `json:"operate_code"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

//用户准备
type Game_C_UserPrepare struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

//用户取消准备
type Game_C_UserUnPrepare struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

//用户听牌
type Game_C_UserTing struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

//换桌
type Game_C_ChangeTable struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

// 托管
type Game_C_AutoManage struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

// 取消托管
type Game_C_UnAutoManage struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

//请求失败
type Game_S_ReqlyFail struct {
	ErrorCode            int32    `json:"errno"`
	ErrorMsg             string   `json:"errmsg"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

//登陆成功
type Game_S_LoginSuccess struct {
	GameStartTime        int32    `json:"game_start_time"`
	GameOperateTime      int32    `json:"game_operate_time"`
	GameOutCardTime      int32    `json:"game_outcard_time"`
	MaCount              int32    `json:"macount"`
	Status               int32    `json:"status"` // 是否重连0 ,1否
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

//坐下通知消息
type Game_S_SitDownNotify struct {
	Data                 *Game_S_User `json:"data"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

//起立通知消息
type Game_S_StandUpNotify struct {
	ChairID              int32    `json:"ChairID"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

//掉线通知消息
type Game_S_OffLineNotify struct {
	ChairID              int32    `json:"chair_id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

//上线通知消息
type Game_S_OnLineNotify struct {
	ChairID              int32    `json:"chair_id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

//user
type Game_S_User struct {
	UserID               int32    `json:"user_id"`
	NikeName             string   `json:"nike_name"`
	UserDiamond          float32  `json:"user_money"`
	MemberOrder          int32    `json:"member_order"`
	HeadImageUrl         string   `json:"head_image_url"`
	FaceID               int32    `json:"face_id"`
	RoleID               int32    `json:"role_id"`
	SuitID               int32    `json:"suit_id"`
	PhotoFrameID         int32    `json:"photo_frame_id"`
	TableID              int32    `json:"table_id"`
	ChairID              int32    `json:"chair_id"`
	Status               int32    `json:"status"`
	Gender               int32    `json:"gender"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

type DiskMahjong struct {
	Data                 int32    `json:"data"`
	Code                 int32    `json:"code"`
	ChairID              int32    `json:"chair_id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

//操作牌型
type DiskMahjongList struct {
	ChairID              int32         `json:"chair_id"`
	Data                 []DiskMahjong `json:"desk_mj"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

//key int32 value int32
type Int32MapInt32 struct {
	Data                 []MjData `json:"user_mj_list"`
	ChairID              int32    `json:"chair_id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

//key []int32
type Int32Array struct {
	ChairID              int32    `json:"chair_id"`
	Data                 []int32  `json:"card_list"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

//空闲场景
type Game_S_FreeScene struct {
	SceneStartTime       int64         `json:"scene_start_time"`
	UserList             []Game_S_User `json:"user_list"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

//游戏场景
type Game_S_PlayScene struct {
	SceneStartTime        int32             `json:"scene_start_time"`
	UserList              []Game_S_User     `json:"user_list"`
	UserMahjong           []MjData          `json:"user_mj" `
	UserListTrusteeship   []UserTuoGuan     `json:"user_trustship"`
	UserListTing          []UserTingPai     `json:"user_ting"`
	OutMjChairID          int32             `json:"outcard_user"`
	CurrentChairID        int32             `json:"current_chair_id"`
	OutMj                 int32             `json:"out_mj"`
	SendMj                int32             `json:"send_mj"`
	UserListOutCardRecord []Int32Array      `json:"user_out_card_record"`
	UserListDiskMahjong   []DiskMahjongList `json:"user_desk_mj"`
	UserAction            []int32           `json:"user_action"`
	DiskMahjongNum        int32             `json:"desk_mj_num"`
	BankerUser            int32             `json:"bank_user"`
	XXX_NoUnkeyedLiteral  struct{}          `json:"-"`
	XXX_unrecognized      []byte            `json:"-"`
	XXX_sizecache         int32             `json:"-"`
}

type UserTingPai struct {
	ChairID int32 `json:"chair_id"`
	IsTing  bool  `json:"is_ting"`
}
type UserTuoGuan struct {
	ChairID int32 `json:"chair_id"`
	IsTing  bool  `json:"is_tuoguan"`
}

//用户出牌消息
type Game_S_UserOutCard struct {
	ChairID              int32    `json:"chair_id"`
	MjData               int32    `json:"mj_data"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

//操作通知
type Game_S_OperateNotify struct {
	Response             []int32  `json:"response"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

//用户操作消息
type Game_S_UserOperate struct {
	OperateCode          int32          `json:"operate_code"`
	OperateMj            int32          `json:"operate_mj"`
	OperateUser          int32          `json:"operate_user"`
	ProvideUser          int32          `json:"provide_user"`
	UserListLoss         []UserLossData `json:"user_loss"`
	UserListMoney        []UserListData `json:"userlist_money"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

type UserLossData struct {
	ChairID  int32   `json:"chair_id"`
	UserLoss float32 `json:"user_loss"`
}

type UserListData struct {
	ChairID   int32   `json:"chair_id"`
	UserMoney float32 `json:"user_money"`
}

//发牌消息
type Game_S_SendMj struct {
	MjData               int32    `json:"mj_data"`
	CurrentChairID       int32    `json:"current_chair_id"`
	Tail                 bool     `json:"tail"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

//游戏开始
type Game_S_GameStart struct {
	BankerUser           int32    `json:"bank_user"`
	SiceData             []int32  `json:"sice_data"`
	UserMjData           []MjData `json:"user_mj_data"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

//结束游戏消息
type Game_S_GameConclude struct {
	WinChairID           int32           `json:"win_chair_id"`
	ProvideMj            int32           `json:"provide_mj"`
	UserListMjData       []Int32MapInt32 `json:"userlist_mj_data"`
	MaData               []int32         `json:"ma_data"`
	UserListLoss         []UserLossData  `json:"userlist_loss"`
	UserListMoney        []UserListData  `json:"userlist_money"`
	SettlementType       int32           `json:"set_lement_type"`
	HuType               []int32         `json:"hu_type"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

//准备通知
type Game_S_UserPrepare struct {
	ChairID              int32    `json:"chair_id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

//取消准备通知
type Game_S_UserUnPrepare struct {
	ChairID              int32    `json:"chair_id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

//用户听牌
type Game_S_UserTing struct {
	UserMajData          []UserListMjData `json:"user_mj_data"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

type UserListMjData struct {
	MjData  []MjData `json:"mj_data"`  // 能胡的牌，剩余牌
	OutCard int32    `json:"out_card"` // 出的牌
}

// 用户托管通知
type Game_S_AutoManage struct {
	ChairID              int32    `json:"chair_id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

// 用户取消托管通知
type Game_S_UnAutoManage struct {
	ChairID              int32    `json:"chair_id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
